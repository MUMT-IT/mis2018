"""added is_focus column in AFunctionalCompetencyEvaluationIndicator table

Revision ID: 75368e604d7d
Revises: b42005a6175a
Create Date: 2024-02-27 16:31:31.485160

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '75368e604d7d'
down_revision = 'b42005a6175a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('alumni_information',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('th_title', sa.String(), nullable=True),
    sa.Column('th_firstname', sa.String(), nullable=True),
    sa.Column('th_lastname', sa.String(), nullable=True),
    sa.Column('contact', sa.String(), nullable=True),
    sa.Column('occupation', sa.String(), nullable=True),
    sa.Column('workplace', sa.String(), nullable=True),
    sa.Column('province', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('api_keys',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('service', sa.String(), nullable=False),
    sa.Column('key', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('buffer_details',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('desc', sa.String(length=80), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('buffers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('desc', sa.String(length=80), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('comhealth_containers',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('code', sa.String(length=64), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('desc', sa.Text(), nullable=True),
    sa.Column('volume', sa.Numeric(), nullable=True),
    sa.Column('group', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('comhealth_containers', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_comhealth_containers_code'), ['code'], unique=False)
        batch_op.create_index(batch_op.f('ix_comhealth_containers_name'), ['name'], unique=False)

    op.create_table('comhealth_customer_employment_types',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('emptype_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('finance_comment', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('comhealth_customer_groups',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('desc', sa.Text(), nullable=True),
    sa.Column('created_at', sa.Date(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('comhealth_customer_info_items',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('text', sa.String(length=256), nullable=False),
    sa.Column('type', sa.String(length=64), nullable=False),
    sa.Column('choices', sa.Text(), nullable=True),
    sa.Column('placeholder', sa.String(length=64), nullable=True),
    sa.Column('multiple_selection', sa.Boolean(), nullable=True),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('unit', sa.String(length=32), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('comhealth_finance_contact_reason',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('reason', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('comhealth_orgs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('comhealth_orgs', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_comhealth_orgs_name'), ['name'], unique=False)

    op.create_table('comhealth_receipt_ids',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('buddhist_year', sa.Integer(), nullable=False),
    sa.Column('count', sa.Integer(), nullable=True),
    sa.Column('updated_datetime', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('comhealth_services',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('location', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('comhealth_test_groups',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('desc', sa.Text(), nullable=True),
    sa.Column('age_max', sa.Integer(), nullable=True),
    sa.Column('age_min', sa.Integer(), nullable=True),
    sa.Column('gender', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('comhealth_test_groups', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_comhealth_test_groups_name'), ['name'], unique=False)

    op.create_table('comhealth_test_profiles',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('desc', sa.Text(), nullable=True),
    sa.Column('age_max', sa.Integer(), nullable=True),
    sa.Column('age_min', sa.Integer(), nullable=True),
    sa.Column('gender', sa.Integer(), nullable=True),
    sa.Column('quote', sa.Numeric(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('comhealth_test_profiles', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_comhealth_test_profiles_name'), ['name'], unique=False)

    op.create_table('complaint_categories',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('category', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('complaint_priorities',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('priority', sa.Integer(), nullable=False),
    sa.Column('priority_text', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('complaint_statuses',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('icon', sa.String(), nullable=True),
    sa.Column('color', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cost_centers',
    sa.Column('id', sa.String(length=12), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('db_data_subjects',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('subject', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('db_datatags',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('tag', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tag')
    )
    op.create_table('db_storages',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('desc', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('doc_categories',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('doc_orgs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('org_document_code', sa.Integer(), nullable=True),
    sa.Column('detail', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('eduqa_course_categories',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('category', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('eduqa_course_instructor_roles',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('role', sa.String(), nullable=True),
    sa.Column('admin', sa.Boolean(), nullable=True),
    sa.Column('credit_hour', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('eduqa_course_learning_activity_assessments',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('detail', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('eduqa_course_session_detail_role_items',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('role', sa.String(), nullable=True),
    sa.Column('format', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('eduqa_grading_schemes',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('eduqa_instructor_evaluation_categories',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('category', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('eduqa_instructor_evaluation_choices',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('score', sa.Numeric(), nullable=True),
    sa.Column('label', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('eduqa_programs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('degree', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('eduqa_students',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('th_title', sa.String(length=16), nullable=True),
    sa.Column('en_title', sa.String(length=16), nullable=True),
    sa.Column('th_name', sa.String(length=255), nullable=True),
    sa.Column('en_name', sa.String(length=255), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('status', sa.String(length=16), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('student_id')
    )
    op.create_table('electronic_receipt_bank_names',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('bank_name', sa.String(), nullable=True),
    sa.Column('bank_type', sa.String(), nullable=True),
    sa.Column('code', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('electronic_receipt_gls',
    sa.Column('gl', sa.String(), nullable=False),
    sa.Column('receive_name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('gl')
    )
    op.create_table('electronic_receipt_received_money_from',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('received_money_from', sa.String(), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('taxpayer_dentification_no', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('food_agritype',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.Column('desc', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('food_bact_tests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('method', sa.String(), nullable=False),
    sa.Column('unit', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('food_health_lab_results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('serviceno', sa.String(), nullable=False),
    sa.Column('data', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('food_health_lab_tests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tcode', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('unit', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('food_health_person',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cmscode', sa.String(), nullable=False),
    sa.Column('firstname', sa.String(), nullable=True),
    sa.Column('lastname', sa.String(), nullable=True),
    sa.Column('pid', sa.String(length=13), nullable=True),
    sa.Column('sex', sa.String(), nullable=True),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('mobile', sa.String(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('food_health_phyexam',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cmscode', sa.String(), nullable=False),
    sa.Column('serviceno', sa.String(), nullable=False),
    sa.Column('servicedate', sa.DateTime(), nullable=True),
    sa.Column('weight', sa.Numeric(), nullable=True),
    sa.Column('height', sa.Numeric(), nullable=True),
    sa.Column('heartrate', sa.Integer(), nullable=True),
    sa.Column('systolic', sa.Integer(), nullable=True),
    sa.Column('diastolic', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('food_parasite_tests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organism', sa.String(), nullable=False),
    sa.Column('stage', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('food_persons',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('firstname', sa.String(length=200), nullable=False),
    sa.Column('lastname', sa.String(length=200), nullable=False),
    sa.Column('pid', sa.String(length=13), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('food_pesticide_tests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('unit', sa.String(), nullable=True),
    sa.Column('cutoff', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('food_produces',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('food_survey_results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pid', sa.String(length=13), nullable=True),
    sa.Column('firstname', sa.String(), nullable=True),
    sa.Column('lastname', sa.String(), nullable=True),
    sa.Column('questions', sa.JSON(), nullable=True),
    sa.Column('results', sa.JSON(), nullable=True),
    sa.Column('survey_datetime', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('food_toxico_tests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('unit', sa.String(), nullable=True),
    sa.Column('cutoff', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('health_service_app_users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('line_id', sa.String(length=255), nullable=True),
    sa.Column('firstname', sa.String(length=255), nullable=True),
    sa.Column('lastname', sa.String(length=255), nullable=True),
    sa.Column('tel', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('health_service_services',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('detail', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('health_service_sites',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('lat', sa.Float(), nullable=True),
    sa.Column('lon', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('holidays',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('holiday_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('holiday_name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('lis_test_groups',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('abbr', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('market_details',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('detail', sa.String(length=80), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('market_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('desc', sa.String(length=80), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('missions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('org_structure',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('position', sa.String(), nullable=False),
    sa.Column('position_en', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('orgs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('en_name', sa.String(), nullable=True),
    sa.Column('head', sa.String(), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['orgs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pa_functional_competency_criteria',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('criterion', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pa_functional_competency_levels',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('order', sa.Integer(), nullable=True),
    sa.Column('period', sa.String(), nullable=True),
    sa.Column('desc', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pa_functional_competency_round',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('start', sa.Date(), nullable=True),
    sa.Column('end', sa.Date(), nullable=True),
    sa.Column('desc', sa.String(), nullable=True),
    sa.Column('is_closed', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pa_item_categories',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('category', sa.String(), nullable=False),
    sa.Column('code', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('pa_levels',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('level', sa.String(), nullable=True),
    sa.Column('order', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pa_rounds',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('start', sa.Date(), nullable=True),
    sa.Column('end', sa.Date(), nullable=True),
    sa.Column('desc', sa.String(), nullable=True),
    sa.Column('is_closed', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pdpa_types',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pesticide_uses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('desc', sa.String(length=80), nullable=False),
    sa.Column('last_use', sa.Date(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('procurement_categories',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('category', sa.String(), nullable=False),
    sa.Column('code', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('procurement_info_cpus',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('cpu', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('procurement_info_rams',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('ram', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('procurement_info_windows_versions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('windows_version', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('procurement_purchasing_types',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('purchasing_type', sa.String(), nullable=True),
    sa.Column('fund', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('procurement_statuses',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('provinces',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('name', sa.String(length=40), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('research_countries',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('research_pub',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('scopus_id', sa.String(length=128), nullable=True),
    sa.Column('data', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('cited_count', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('abstract', sa.Text(), nullable=True),
    sa.Column('cover_date', sa.Date(), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('publication_name', sa.String(), nullable=True),
    sa.Column('scopus_link', sa.String(), nullable=True),
    sa.Column('doi', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('research_pub', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_research_pub_scopus_id'), ['scopus_id'], unique=False)

    op.create_table('research_subject_areas',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('abbr', sa.String(), nullable=False),
    sa.Column('area', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('role_need', sa.String(), nullable=True),
    sa.Column('action_need', sa.String(), nullable=True),
    sa.Column('resource_id', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('scb_payment_records',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('payer_account_number', sa.String(), nullable=True),
    sa.Column('payee_proxy_type', sa.String(), nullable=True),
    sa.Column('send_bank_code', sa.String(), nullable=True),
    sa.Column('payee_proxy_id', sa.String(), nullable=True),
    sa.Column('bill_payment_ref3', sa.String(), nullable=True),
    sa.Column('currency_code', sa.String(), nullable=True),
    sa.Column('transaction_type', sa.String(), nullable=True),
    sa.Column('transaction_date_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('channel_code', sa.String(), nullable=True),
    sa.Column('bill_payment_ref1', sa.String(), nullable=True),
    sa.Column('amount', sa.Float(asdecimal=True), nullable=True),
    sa.Column('payer_proxy_type', sa.String(), nullable=True),
    sa.Column('payee_name', sa.String(), nullable=True),
    sa.Column('receiveing_bank_code', sa.String(), nullable=True),
    sa.Column('payee_account_number', sa.String(), nullable=True),
    sa.Column('payer_proxy_id', sa.String(), nullable=True),
    sa.Column('bill_payment_ref2', sa.String(), nullable=True),
    sa.Column('transaction_id', sa.String(), nullable=True),
    sa.Column('payer_name', sa.String(), nullable=True),
    sa.Column('customer1', sa.String(), nullable=True),
    sa.Column('customer2', sa.String(), nullable=True),
    sa.Column('service', sa.String(), nullable=True),
    sa.Column('created_datetime', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('scb_payment_service_client_accounts',
    sa.Column('account_id', sa.String(), nullable=False),
    sa.Column('secret_hash', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('account_id')
    )
    op.create_table('scheduler_event_categories',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('category', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('scheduler_room_avails',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('availability', sa.String(length=32), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('scheduler_room_types',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('type', sa.String(length=32), nullable=True),
    sa.Column('color', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('scheduler_vehicle_avails',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('availability', sa.String(length=32), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('scheduler_vehicle_types',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('type', sa.String(length=32), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('smartclass_scheduler_resource_types',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('type', sa.String(length=32), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('staff_academic_position',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('fullname_th', sa.String(), nullable=False),
    sa.Column('shortname_th', sa.String(), nullable=False),
    sa.Column('fullname_en', sa.String(), nullable=False),
    sa.Column('shortname_en', sa.String(), nullable=False),
    sa.Column('level', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('staff_employments',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('title')
    )
    op.create_table('staff_group_positions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('position', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('staff_job_positions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('en_title', sa.String(), nullable=True),
    sa.Column('th_title', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('staff_leave_types',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('request_in_advance', sa.Boolean(), nullable=True),
    sa.Column('document_required', sa.Boolean(), nullable=True),
    sa.Column('reason_required', sa.Boolean(), nullable=True),
    sa.Column('requester_self_added', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('type')
    )
    op.create_table('staff_seminar',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('start_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('end_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('topic_type', sa.String(), nullable=True),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('organize_by', sa.String(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('is_online', sa.Boolean(), nullable=True),
    sa.Column('cancelled_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('upload_file_url', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('staff_seminar_missions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('mission', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('staff_seminar_objectives',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('objective', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('staff_special_groups',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('group_code', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('group_code'),
    sa.UniqueConstraint('name')
    )
    op.create_table('students',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('refno', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=True),
    sa.Column('th_first_name', sa.String(), nullable=False),
    sa.Column('th_last_name', sa.String(), nullable=False),
    sa.Column('en_first_name', sa.String(), nullable=True),
    sa.Column('en_last_name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tracker_activities',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('activity', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('well_sizes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('desc', sa.String(length=80), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('well_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('desc', sa.String(length=80), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('comhealth_department',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['comhealth_orgs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('comhealth_department', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_comhealth_department_name'), ['name'], unique=False)

    op.create_table('comhealth_group_service_assoc',
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('service_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['comhealth_test_groups.id'], ),
    sa.ForeignKeyConstraint(['service_id'], ['comhealth_services.id'], ),
    sa.PrimaryKeyConstraint('group_id', 'service_id')
    )
    op.create_table('comhealth_profile_service_assoc',
    sa.Column('profile_id', sa.Integer(), nullable=False),
    sa.Column('service_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['profile_id'], ['comhealth_test_profiles.id'], ),
    sa.ForeignKeyConstraint(['service_id'], ['comhealth_services.id'], ),
    sa.PrimaryKeyConstraint('profile_id', 'service_id')
    )
    op.create_table('comhealth_reference_test_profile',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('profile_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['profile_id'], ['comhealth_test_profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('comhealth_tests',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('code', sa.String(length=64), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('desc', sa.Text(), nullable=True),
    sa.Column('gov_code', sa.String(length=16), nullable=True),
    sa.Column('default_price', sa.Numeric(), nullable=True),
    sa.Column('container_id', sa.Integer(), nullable=True),
    sa.Column('reimbursable', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['container_id'], ['comhealth_containers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('comhealth_tests', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_comhealth_tests_code'), ['code'], unique=False)
        batch_op.create_index(batch_op.f('ix_comhealth_tests_name'), ['name'], unique=False)

    op.create_table('complaint_topics',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('topic', sa.String(length=255), nullable=False),
    sa.Column('code', sa.String(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['complaint_categories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('dashboard',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('url', sa.String(), nullable=True),
    sa.Column('mission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['mission_id'], ['missions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('districts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=40), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('province_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['province_id'], ['provinces.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('doc_send_out',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('running_no', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('send_to', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('org_id', sa.Integer(), nullable=False),
    sa.Column('file_name', sa.String(length=255), nullable=True),
    sa.Column('url', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['org_id'], ['orgs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('eduqa_curriculums',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('program_id', sa.Integer(), nullable=True),
    sa.Column('th_name', sa.String(), nullable=False),
    sa.Column('en_name', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['program_id'], ['eduqa_programs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('eduqa_grading_scheme_items',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('order', sa.Integer(), nullable=True),
    sa.Column('symbol', sa.String(), nullable=False),
    sa.Column('detail', sa.String(), nullable=True),
    sa.Column('scheme_id', sa.Integer(), nullable=True),
    sa.Column('color_flag', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['scheme_id'], ['eduqa_grading_schemes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('eduqa_instructor_evaluation_items',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('number', sa.Integer(), nullable=True),
    sa.Column('question', sa.Text(), nullable=False),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['eduqa_instructor_evaluation_categories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('farm_to_markets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('market_id', sa.Integer(), nullable=True),
    sa.Column('market_detail_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['market_detail_id'], ['market_details.id'], ),
    sa.ForeignKeyConstraint(['market_id'], ['market_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('food_health_services',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cmscode', sa.String(), nullable=False),
    sa.Column('serviceno', sa.String(), nullable=False),
    sa.Column('servicedate', sa.DateTime(), nullable=True),
    sa.Column('phyexam_id', sa.Integer(), nullable=True),
    sa.Column('labexam_id', sa.Integer(), nullable=True),
    sa.Column('health_person_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['health_person_id'], ['food_health_person.id'], ),
    sa.ForeignKeyConstraint(['labexam_id'], ['food_health_lab_results.id'], ),
    sa.ForeignKeyConstraint(['phyexam_id'], ['food_health_phyexam.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('food_produce_breeds',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('produce_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['produce_id'], ['food_produces.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('iocodes',
    sa.Column('id', sa.String(length=16), nullable=False),
    sa.Column('mission_id', sa.Integer(), nullable=False),
    sa.Column('org_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['mission_id'], ['missions.id'], ),
    sa.ForeignKeyConstraint(['org_id'], ['orgs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('lis_tests',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('abbr', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('cost', sa.Numeric(), nullable=True),
    sa.Column('quantitative', sa.Boolean(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('unit', sa.String(), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['lis_test_groups.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pa_functional_competency',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('desc', sa.String(), nullable=True),
    sa.Column('job_position_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['job_position_id'], ['staff_job_positions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pa_round_employment_assoc',
    sa.Column('pa_round_id', sa.Integer(), nullable=True),
    sa.Column('employment_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['employment_id'], ['staff_employments.id'], ),
    sa.ForeignKeyConstraint(['pa_round_id'], ['pa_rounds.id'], )
    )
    op.create_table('pub_subjarea_assoc',
    sa.Column('subj_id', sa.String(), nullable=True),
    sa.Column('pub_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['pub_id'], ['research_pub.id'], ),
    sa.ForeignKeyConstraint(['subj_id'], ['research_subject_areas.id'], )
    )
    op.create_table('research_affils',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('country_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['country_id'], ['research_countries.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('scheduler_vehicle_resources',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('license', sa.String(length=8), nullable=False),
    sa.Column('maker', sa.String(length=16), nullable=False),
    sa.Column('model', sa.String(length=16), nullable=True),
    sa.Column('year', sa.String(length=4), nullable=True),
    sa.Column('occupancy', sa.Integer(), nullable=False),
    sa.Column('desc', sa.Text(), nullable=True),
    sa.Column('business_hour_start', sa.Time(), nullable=True),
    sa.Column('business_hour_end', sa.Time(), nullable=True),
    sa.Column('availability_id', sa.Integer(), nullable=True),
    sa.Column('type_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['availability_id'], ['scheduler_vehicle_avails.id'], ),
    sa.ForeignKeyConstraint(['type_id'], ['scheduler_vehicle_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('smartclass_scheduler_online_accounts',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('resource_type_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['resource_type_id'], ['smartclass_scheduler_resource_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('staff_leave_quota',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('first_year', sa.Integer(), nullable=True),
    sa.Column('max_per_leave', sa.Integer(), nullable=True),
    sa.Column('max_per_year', sa.Integer(), nullable=True),
    sa.Column('cum_max_per_year1', sa.Integer(), nullable=True),
    sa.Column('cum_max_per_year2', sa.Integer(), nullable=True),
    sa.Column('min_employed_months', sa.Integer(), nullable=True),
    sa.Column('employment_id', sa.Integer(), nullable=True),
    sa.Column('leave_type_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['employment_id'], ['staff_employments.id'], ),
    sa.ForeignKeyConstraint(['leave_type_id'], ['staff_leave_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('staff_personal_info',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('en_title', sa.String(), nullable=True),
    sa.Column('th_title', sa.String(), nullable=True),
    sa.Column('en_firstname', sa.String(), nullable=False),
    sa.Column('en_lastname', sa.String(), nullable=False),
    sa.Column('th_firstname', sa.String(), nullable=True),
    sa.Column('th_lastname', sa.String(), nullable=True),
    sa.Column('orgs_id', sa.Integer(), nullable=True),
    sa.Column('employed_date', sa.Date(), nullable=True),
    sa.Column('employment_id', sa.Integer(), nullable=True),
    sa.Column('finger_scan_id', sa.Integer(), nullable=True),
    sa.Column('academic_staff', sa.Boolean(), nullable=True),
    sa.Column('retired', sa.Boolean(), nullable=True),
    sa.Column('job_position_id', sa.Integer(), nullable=True),
    sa.Column('position', sa.String(), nullable=True),
    sa.Column('mobile_phone', sa.String(), nullable=True),
    sa.Column('telephone', sa.String(), nullable=True),
    sa.Column('retirement_date', sa.Date(), nullable=True),
    sa.Column('resignation_date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['employment_id'], ['staff_employments.id'], ),
    sa.ForeignKeyConstraint(['job_position_id'], ['staff_job_positions.id'], ),
    sa.ForeignKeyConstraint(['orgs_id'], ['orgs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('staff_shift_role',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('role', sa.String(), nullable=True),
    sa.Column('orgs_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['orgs_id'], ['orgs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('strategies',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('refno', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('content', sa.String(), nullable=False),
    sa.Column('org_id', sa.Integer(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['org_id'], ['orgs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('comhealth_divisions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['comhealth_department.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('comhealth_divisions', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_comhealth_divisions_name'), ['name'], unique=False)

    op.create_table('comhealth_test_items',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('test_id', sa.Integer(), nullable=True),
    sa.Column('profile_id', sa.Integer(), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('price', sa.Numeric(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['comhealth_test_groups.id'], ),
    sa.ForeignKeyConstraint(['profile_id'], ['comhealth_test_profiles.id'], ),
    sa.ForeignKeyConstraint(['test_id'], ['comhealth_tests.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cost_center_iocode_assoc',
    sa.Column('cost_center_id', sa.String(), nullable=False),
    sa.Column('iocode_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['cost_center_id'], ['cost_centers.id'], ),
    sa.ForeignKeyConstraint(['iocode_id'], ['iocodes.id'], ),
    sa.PrimaryKeyConstraint('cost_center_id', 'iocode_id')
    )
    op.create_table('eduqa_curriculum_revisions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('curriculum_id', sa.Integer(), nullable=True),
    sa.Column('revision_year', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['curriculum_id'], ['eduqa_curriculums.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('food_grown_produces',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('produce_id', sa.Integer(), nullable=True),
    sa.Column('breed_id', sa.Integer(), nullable=True),
    sa.Column('estimated_area', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['breed_id'], ['food_produce_breeds.id'], ),
    sa.ForeignKeyConstraint(['produce_id'], ['food_produces.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('lis_orders',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('patient_id', sa.String(), nullable=False),
    sa.Column('lab_no', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.String(), nullable=True),
    sa.Column('test_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['students.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['students.id'], ),
    sa.ForeignKeyConstraint(['test_id'], ['lis_tests.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pa_functional_competency_indicators',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('function_id', sa.Integer(), nullable=True),
    sa.Column('level_id', sa.Integer(), nullable=True),
    sa.Column('indicator', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['function_id'], ['pa_functional_competency.id'], ),
    sa.ForeignKeyConstraint(['level_id'], ['pa_functional_competency_levels.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('research_authors',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('firstname', sa.String(), nullable=True),
    sa.Column('lastname', sa.String(), nullable=True),
    sa.Column('affil_id', sa.String(), nullable=True),
    sa.Column('personal_info_id', sa.Integer(), nullable=True),
    sa.Column('h_index', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['affil_id'], ['research_affils.id'], ),
    sa.ForeignKeyConstraint(['personal_info_id'], ['staff_personal_info.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('staff_academic_position_records',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('personal_info_id', sa.Integer(), nullable=True),
    sa.Column('appointed_at', sa.Date(), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('position_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['personal_info_id'], ['staff_personal_info.id'], ),
    sa.ForeignKeyConstraint(['position_id'], ['staff_academic_position.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('staff_account',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('personal_id', sa.Integer(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('line_id', sa.String(), nullable=True),
    sa.Column('password', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['personal_id'], ['staff_personal_info.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    with op.batch_alter_table('staff_account', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_staff_account_line_id'), ['line_id'], unique=True)

    op.create_table('staff_edu_degree',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('level', sa.String(), nullable=False),
    sa.Column('en_title', sa.String(), nullable=True),
    sa.Column('th_title', sa.String(), nullable=True),
    sa.Column('en_major', sa.String(), nullable=True),
    sa.Column('th_major', sa.String(), nullable=True),
    sa.Column('en_school', sa.String(), nullable=True),
    sa.Column('th_country', sa.String(), nullable=True),
    sa.Column('received_date', sa.Date(), nullable=True),
    sa.Column('personal_info_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['personal_info_id'], ['staff_personal_info.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('strategy_tactics',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('refno', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('content', sa.String(), nullable=False),
    sa.Column('strategy_id', sa.Integer(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['strategy_id'], ['strategies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subdistricts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('district_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['district_id'], ['districts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('addresses',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('village', sa.String(), nullable=True),
    sa.Column('street', sa.String(), nullable=True),
    sa.Column('province_id', sa.Integer(), nullable=True),
    sa.Column('district_id', sa.Integer(), nullable=True),
    sa.Column('subdistrict_id', sa.Integer(), nullable=True),
    sa.Column('postal_code', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['district_id'], ['districts.id'], ),
    sa.ForeignKeyConstraint(['province_id'], ['provinces.id'], ),
    sa.ForeignKeyConstraint(['subdistrict_id'], ['subdistricts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('chemdb_items',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('desc', sa.String(length=255), nullable=True),
    sa.Column('msds', sa.String(length=255), nullable=True),
    sa.Column('cas', sa.String(length=255), nullable=True),
    sa.Column('company_code', sa.String(length=255), nullable=True),
    sa.Column('vendor', sa.String(length=255), nullable=True),
    sa.Column('container_size', sa.Numeric(), nullable=True),
    sa.Column('container_unit', sa.String(length=8), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('unit_price', sa.Numeric(), nullable=True),
    sa.Column('expire_date', sa.Date(), nullable=True),
    sa.Column('created_at', sa.Date(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_new', sa.Boolean(), nullable=True),
    sa.Column('location', sa.String(length=255), nullable=True),
    sa.Column('contact_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['contact_id'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('comhealth_cashier',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('staff_id', sa.Integer(), nullable=True),
    sa.Column('position', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['staff_id'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('comhealth_consent_details',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('details', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('creator', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['creator'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('comhealth_customers',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('hn', sa.String(length=13), nullable=True),
    sa.Column('title', sa.String(length=32), nullable=True),
    sa.Column('firstname', sa.String(length=255), nullable=True),
    sa.Column('lastname', sa.String(length=255), nullable=True),
    sa.Column('org_id', sa.Integer(), nullable=True),
    sa.Column('dept_id', sa.Integer(), nullable=True),
    sa.Column('unit', sa.String(), nullable=True),
    sa.Column('dob', sa.Date(), nullable=True),
    sa.Column('gender', sa.Integer(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('emptype_id', sa.Integer(), nullable=True),
    sa.Column('line_id', sa.String(), nullable=True),
    sa.Column('emp_id', sa.String(), nullable=True),
    sa.Column('division_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['dept_id'], ['comhealth_department.id'], ),
    sa.ForeignKeyConstraint(['division_id'], ['comhealth_divisions.id'], ),
    sa.ForeignKeyConstraint(['emptype_id'], ['comhealth_customer_employment_types.id'], ),
    sa.ForeignKeyConstraint(['org_id'], ['comhealth_orgs.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('hn'),
    sa.UniqueConstraint('line_id')
    )
    with op.batch_alter_table('comhealth_customers', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_comhealth_customers_firstname'), ['firstname'], unique=False)
        batch_op.create_index(batch_op.f('ix_comhealth_customers_lastname'), ['lastname'], unique=False)

    op.create_table('complaint_admins',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('staff_account', sa.Integer(), nullable=True),
    sa.Column('is_supervisor', sa.Boolean(), nullable=True),
    sa.Column('topic_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['staff_account'], ['staff_account.id'], ),
    sa.ForeignKeyConstraint(['topic_id'], ['complaint_topics.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('complaint_records',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('desc', sa.Text(), nullable=False),
    sa.Column('topic_id', sa.Integer(), nullable=True),
    sa.Column('priority_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.Column('origin_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('subtopic_id', sa.Integer(), nullable=True),
    sa.Column('forward', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['origin_id'], ['complaint_records.id'], ),
    sa.ForeignKeyConstraint(['priority_id'], ['complaint_priorities.id'], ),
    sa.ForeignKeyConstraint(['status'], ['complaint_statuses.id'], ),
    sa.ForeignKeyConstraint(['subtopic_id'], ['complaint_sub_topics.id'], ),
    sa.ForeignKeyConstraint(['topic_id'], ['complaint_topics.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('db_core_services',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('service', sa.String(length=255), nullable=False),
    sa.Column('mission_id', sa.Integer(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['staff_account.id'], ),
    sa.ForeignKeyConstraint(['mission_id'], ['missions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('db_data',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('db_processes',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('category', sa.String(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('org_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['staff_account.id'], ),
    sa.ForeignKeyConstraint(['org_id'], ['orgs.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['db_processes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('doc_rounds',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('e_sign_certificate_files',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('file', sa.LargeBinary(), nullable=True),
    sa.Column('image', sa.LargeBinary(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('staff_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['staff_id'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('eduqa_academic_staff',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('roles', sa.String(), nullable=True),
    sa.Column('curriculumn_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['curriculumn_id'], ['eduqa_curriculum_revisions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('eduqa_course_instructors',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('eduqa_courses',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('th_code', sa.String(length=255), nullable=False),
    sa.Column('en_code', sa.String(length=255), nullable=False),
    sa.Column('th_name', sa.String(length=255), nullable=False),
    sa.Column('en_name', sa.String(length=255), nullable=False),
    sa.Column('student_year', sa.String(), nullable=True),
    sa.Column('semester', sa.String(), nullable=True),
    sa.Column('academic_year', sa.String(), nullable=True),
    sa.Column('goal', sa.Text(), nullable=True),
    sa.Column('objective', sa.Text(), nullable=True),
    sa.Column('th_desc', sa.Text(), nullable=True),
    sa.Column('en_desc', sa.Text(), nullable=True),
    sa.Column('lecture_credit', sa.Numeric(), nullable=True),
    sa.Column('lab_credit', sa.Numeric(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('updater_id', sa.Integer(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('revision_id', sa.Integer(), nullable=True),
    sa.Column('grading_scheme_id', sa.Integer(), nullable=True),
    sa.Column('petition', sa.Text(), nullable=True),
    sa.Column('grade_correction', sa.Text(), nullable=True),
    sa.Column('revision_plan', sa.Text(), nullable=True),
    sa.Column('evaluation_plan', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['eduqa_course_categories.id'], ),
    sa.ForeignKeyConstraint(['creator_id'], ['staff_account.id'], ),
    sa.ForeignKeyConstraint(['grading_scheme_id'], ['eduqa_grading_schemes.id'], ),
    sa.ForeignKeyConstraint(['revision_id'], ['eduqa_curriculum_revisions.id'], ),
    sa.ForeignKeyConstraint(['updater_id'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('eduqa_plos',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('number', sa.Numeric(), nullable=True),
    sa.Column('outcome', sa.Text(), nullable=False),
    sa.Column('revision_id', sa.Integer(), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['eduqa_plos.id'], ),
    sa.ForeignKeyConstraint(['revision_id'], ['eduqa_curriculum_revisions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('electronic_receipt_details',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('number', sa.String(), nullable=True),
    sa.Column('copy_number', sa.Integer(), nullable=True),
    sa.Column('book_number', sa.String(), nullable=True),
    sa.Column('created_datetime', sa.DateTime(timezone=True), nullable=True),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('paid', sa.Boolean(), nullable=True),
    sa.Column('cancelled', sa.Boolean(), nullable=True),
    sa.Column('cancel_comment', sa.Text(), nullable=True),
    sa.Column('payment_method', sa.String(), nullable=False),
    sa.Column('paid_amount', sa.Numeric(), nullable=True),
    sa.Column('card_number', sa.String(length=16), nullable=True),
    sa.Column('cheque_number', sa.String(length=8), nullable=True),
    sa.Column('other_payment_method', sa.String(), nullable=True),
    sa.Column('received_money_from_id', sa.Integer(), nullable=True),
    sa.Column('bank_name_id', sa.Integer(), nullable=True),
    sa.Column('issuer_id', sa.Integer(), nullable=True),
    sa.Column('print_number', sa.Integer(), nullable=True),
    sa.Column('pdf_file', sa.LargeBinary(), nullable=True),
    sa.ForeignKeyConstraint(['bank_name_id'], ['electronic_receipt_bank_names.id'], ),
    sa.ForeignKeyConstraint(['issuer_id'], ['staff_account.id'], ),
    sa.ForeignKeyConstraint(['received_money_from_id'], ['electronic_receipt_received_money_from.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('food_farms',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('estimated_total_size', sa.Float(asdecimal=True), nullable=True),
    sa.Column('estimated_leased_size', sa.Float(asdecimal=True), nullable=True),
    sa.Column('estimated_owned_size', sa.Float(asdecimal=True), nullable=True),
    sa.Column('latitude', sa.Float(asdecimal=True), nullable=True),
    sa.Column('longitude', sa.Float(asdecimal=True), nullable=True),
    sa.Column('well_type_id', sa.Integer(), nullable=True),
    sa.Column('well_size_id', sa.Integer(), nullable=True),
    sa.Column('buffer_id', sa.Integer(), nullable=True),
    sa.Column('buffer_detail_id', sa.Integer(), nullable=True),
    sa.Column('pesticide_use_id', sa.Integer(), nullable=True),
    sa.Column('market_id', sa.Integer(), nullable=True),
    sa.Column('village', sa.String(), nullable=True),
    sa.Column('street', sa.String(), nullable=True),
    sa.Column('agritype', sa.Integer(), nullable=True),
    sa.Column('province_id', sa.Integer(), nullable=True),
    sa.Column('district_id', sa.Integer(), nullable=True),
    sa.Column('subdistrict_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['agritype'], ['food_agritype.id'], ),
    sa.ForeignKeyConstraint(['buffer_detail_id'], ['buffer_details.id'], ),
    sa.ForeignKeyConstraint(['buffer_id'], ['buffers.id'], ),
    sa.ForeignKeyConstraint(['district_id'], ['districts.id'], ),
    sa.ForeignKeyConstraint(['market_id'], ['farm_to_markets.id'], ),
    sa.ForeignKeyConstraint(['pesticide_use_id'], ['pesticide_uses.id'], ),
    sa.ForeignKeyConstraint(['province_id'], ['provinces.id'], ),
    sa.ForeignKeyConstraint(['subdistrict_id'], ['subdistricts.id'], ),
    sa.ForeignKeyConstraint(['well_size_id'], ['well_sizes.id'], ),
    sa.ForeignKeyConstraint(['well_type_id'], ['well_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('health_service_timeslots',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('start', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end', sa.DateTime(timezone=True), nullable=False),
    sa.Column('service_id', sa.Integer(), nullable=True),
    sa.Column('site_id', sa.Integer(), nullable=True),
    sa.Column('staff_id', sa.Integer(), nullable=False),
    sa.Column('quota', sa.Integer(), nullable=True),
    sa.Column('cancelled_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['service_id'], ['health_service_services.id'], ),
    sa.ForeignKeyConstraint(['site_id'], ['health_service_sites.id'], ),
    sa.ForeignKeyConstraint(['staff_id'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('km_processes',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('process', sa.String(), nullable=False),
    sa.Column('desc', sa.Text(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('obsolete', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['creator_id'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('lis_results',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('reported_by', sa.String(), nullable=False),
    sa.Column('quant_value', sa.Numeric(), nullable=True),
    sa.Column('qual_value', sa.String(), nullable=True),
    sa.Column('revision', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=True),
    sa.Column('comment', sa.String(), nullable=True),
    sa.Column('commenter_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['commenter_id'], ['students.id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['lis_orders.id'], ),
    sa.ForeignKeyConstraint(['reported_by'], ['students.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('meeting_agenda_notes',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('staff_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['staff_id'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('meeting_polls',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('poll_name', sa.String(), nullable=False),
    sa.Column('start_vote', sa.DateTime(timezone=True), nullable=False),
    sa.Column('close_vote', sa.DateTime(timezone=True), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ot_document_approval',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('approval_no', sa.String(), nullable=True),
    sa.Column('approved_date', sa.Date(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('start_datetime', sa.DateTime(), nullable=False),
    sa.Column('end_datetime', sa.DateTime(), nullable=True),
    sa.Column('cancelled_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('orgs_id', sa.Integer(), nullable=True),
    sa.Column('upload_file_url', sa.String(), nullable=True),
    sa.Column('file_name', sa.String(), nullable=True),
    sa.Column('created_staff_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_staff_id'], ['staff_account.id'], ),
    sa.ForeignKeyConstraint(['orgs_id'], ['orgs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ot_payment_announce',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('file_name', sa.String(), nullable=True),
    sa.Column('upload_file_url', sa.String(), nullable=True),
    sa.Column('created_account_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('announce_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('start_datetime', sa.DateTime(timezone=True), nullable=True),
    sa.Column('cancelled_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('org_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_account_id'], ['staff_account.id'], ),
    sa.ForeignKeyConstraint(['org_id'], ['orgs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ot_round_request',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('round_no', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by_account_id', sa.Integer(), nullable=True),
    sa.Column('approval_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('approval_by_account_id', sa.Integer(), nullable=True),
    sa.Column('verified_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('verified_by_account_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['approval_by_account_id'], ['staff_account.id'], ),
    sa.ForeignKeyConstraint(['created_by_account_id'], ['staff_account.id'], ),
    sa.ForeignKeyConstraint(['verified_by_account_id'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pa_agreements',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('staff_account_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('round_id', sa.Integer(), nullable=True),
    sa.Column('approved_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('submitted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('evaluated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('performance_score', sa.Numeric(), nullable=True),
    sa.Column('competency_score', sa.Numeric(), nullable=True),
    sa.Column('inform_score_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('accept_score_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('head_committee_staff_account_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['head_committee_staff_account_id'], ['staff_account.id'], ),
    sa.ForeignKeyConstraint(['round_id'], ['pa_rounds.id'], ),
    sa.ForeignKeyConstraint(['staff_account_id'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pa_committees',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('staff_account_id', sa.Integer(), nullable=True),
    sa.Column('org_id', sa.Integer(), nullable=True),
    sa.Column('round_id', sa.Integer(), nullable=True),
    sa.Column('role', sa.String(), nullable=True),
    sa.Column('subordinate_account_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['org_id'], ['orgs.id'], ),
    sa.ForeignKeyConstraint(['round_id'], ['pa_rounds.id'], ),
    sa.ForeignKeyConstraint(['staff_account_id'], ['staff_account.id'], ),
    sa.ForeignKeyConstraint(['subordinate_account_id'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('procurement_borrow_details',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('number', sa.String(), nullable=True),
    sa.Column('book_date', sa.Date(), nullable=True),
    sa.Column('borrower_id', sa.Integer(), nullable=True),
    sa.Column('type_of_purpose', sa.String(), nullable=True),
    sa.Column('purpose', sa.String(), nullable=True),
    sa.Column('reason', sa.String(), nullable=False),
    sa.Column('location_of_use', sa.String(), nullable=False),
    sa.Column('address_number', sa.String(), nullable=True),
    sa.Column('moo', sa.String(), nullable=True),
    sa.Column('road', sa.String(), nullable=True),
    sa.Column('sub_district', sa.String(), nullable=True),
    sa.Column('district', sa.String(), nullable=True),
    sa.Column('province', sa.String(), nullable=True),
    sa.Column('postal_code', sa.Integer(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('created_date', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['borrower_id'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('procurement_details',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('image', sa.Text(), nullable=True),
    sa.Column('qrcode', sa.Text(), nullable=True),
    sa.Column('procurement_no', sa.String(length=12), nullable=True),
    sa.Column('document_no', sa.String(), nullable=True),
    sa.Column('erp_code', sa.String(length=22), nullable=True),
    sa.Column('serial_no', sa.String(), nullable=True),
    sa.Column('bought_by', sa.String(), nullable=True),
    sa.Column('budget_year', sa.String(), nullable=True),
    sa.Column('price', sa.String(), nullable=True),
    sa.Column('received_date', sa.Date(), nullable=True),
    sa.Column('available', sa.String(), nullable=True),
    sa.Column('purchasing_type_id', sa.Integer(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('guarantee', sa.String(), nullable=True),
    sa.Column('start_guarantee_date', sa.Date(), nullable=True),
    sa.Column('end_guarantee_date', sa.Date(), nullable=True),
    sa.Column('model', sa.String(), nullable=True),
    sa.Column('maker', sa.String(), nullable=True),
    sa.Column('size', sa.String(), nullable=True),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('org_id', sa.Integer(), nullable=True),
    sa.Column('sub_number', sa.Integer(), nullable=True),
    sa.Column('curr_acq_value', sa.String(), nullable=True),
    sa.Column('cost_center', sa.String(length=8), nullable=True),
    sa.Column('is_reserved', sa.Boolean(), nullable=True),
    sa.Column('company_support', sa.String(), nullable=True),
    sa.Column('is_instruments', sa.Boolean(), nullable=True),
    sa.Column('is_audio_visual_equipment', sa.Boolean(), nullable=True),
    sa.Column('trouble_shooter_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['procurement_categories.id'], ),
    sa.ForeignKeyConstraint(['org_id'], ['orgs.id'], ),
    sa.ForeignKeyConstraint(['purchasing_type_id'], ['procurement_purchasing_types.id'], ),
    sa.ForeignKeyConstraint(['trouble_shooter_id'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('erp_code')
    )
    op.create_table('pub_author_assoc',
    sa.Column('author_id', sa.Integer(), nullable=True),
    sa.Column('pub_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['research_authors.id'], ),
    sa.ForeignKeyConstraint(['pub_id'], ['research_pub.id'], )
    )
    op.create_table('research_scopus_ids',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['research_authors.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('scheduler_room_resources',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('location', sa.String(length=16), nullable=True),
    sa.Column('number', sa.String(length=16), nullable=True),
    sa.Column('floor', sa.String(), nullable=True),
    sa.Column('occupancy', sa.Integer(), nullable=False),
    sa.Column('desc', sa.Text(), nullable=True),
    sa.Column('business_hour_start', sa.Time(), nullable=True),
    sa.Column('business_hour_end', sa.Time(), nullable=True),
    sa.Column('availability_id', sa.Integer(), nullable=True),
    sa.Column('type_id', sa.Integer(), nullable=True),
    sa.Column('coordinator_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['availability_id'], ['scheduler_room_avails.id'], ),
    sa.ForeignKeyConstraint(['coordinator_id'], ['staff_account.id'], ),
    sa.ForeignKeyConstraint(['type_id'], ['scheduler_room_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('scheduler_vehicle_bookings',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('vehicle_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('init_milage', sa.Integer(), nullable=True),
    sa.Column('end_milage', sa.Integer(), nullable=True),
    sa.Column('toll_fee', sa.Float(), nullable=True),
    sa.Column('distance', sa.Integer(), nullable=True),
    sa.Column('init_location', sa.String(length=255), nullable=True),
    sa.Column('destination', sa.String(length=255), nullable=True),
    sa.Column('start', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end', sa.DateTime(timezone=True), nullable=False),
    sa.Column('iocode_id', sa.String(length=16), nullable=True),
    sa.Column('org_id', sa.Integer(), nullable=True),
    sa.Column('num_passengers', sa.Integer(), nullable=True),
    sa.Column('approved', sa.Boolean(), nullable=True),
    sa.Column('closed', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('cancelled_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('cancelled_by', sa.Integer(), nullable=True),
    sa.Column('approved_by', sa.Integer(), nullable=True),
    sa.Column('approved_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('desc', sa.Text(), nullable=True),
    sa.Column('google_event_id', sa.String(length=64), nullable=True),
    sa.Column('google_calendar_id', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['approved_by'], ['staff_account.id'], ),
    sa.ForeignKeyConstraint(['cancelled_by'], ['staff_account.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['staff_account.id'], ),
    sa.ForeignKeyConstraint(['iocode_id'], ['iocodes.id'], ),
    sa.ForeignKeyConstraint(['org_id'], ['orgs.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['staff_account.id'], ),
    sa.ForeignKeyConstraint(['vehicle_id'], ['scheduler_vehicle_resources.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('smartclass_scheduler_online_account_events',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('start', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end', sa.DateTime(timezone=True), nullable=False),
    sa.Column('occupancy', sa.Integer(), nullable=True),
    sa.Column('approved', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('creator', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('cancelled_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('cancelled_by', sa.Integer(), nullable=True),
    sa.Column('approved_by', sa.Integer(), nullable=True),
    sa.Column('approved_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['smartclass_scheduler_online_accounts.id'], ),
    sa.ForeignKeyConstraint(['approved_by'], ['staff_account.id'], ),
    sa.ForeignKeyConstraint(['cancelled_by'], ['staff_account.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['staff_account.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('staff_group_assoc',
    sa.Column('staff_id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['staff_special_groups.id'], ),
    sa.ForeignKeyConstraint(['staff_id'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('staff_id', 'group_id')
    )
    op.create_table('staff_group_details',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('activity_name', sa.String(), nullable=False),
    sa.Column('appointment_date', sa.Date(), nullable=True),
    sa.Column('expiration_date', sa.Date(), nullable=True),
    sa.Column('responsibility', sa.Text(), nullable=True),
    sa.Column('public', sa.Boolean(), nullable=True),
    sa.Column('official', sa.Boolean(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('staff_head_positions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('staff_account_id', sa.Integer(), nullable=True),
    sa.Column('position', sa.String(), nullable=False),
    sa.Column('org_id', sa.Integer(), nullable=True),
    sa.Column('org_structure_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['org_id'], ['orgs.id'], ),
    sa.ForeignKeyConstraint(['org_structure_id'], ['org_structure.id'], ),
    sa.ForeignKeyConstraint(['staff_account_id'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('staff_leave_approvers',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('staff_account_id', sa.Integer(), nullable=True),
    sa.Column('approver_account_id', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('notified_by_line', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['approver_account_id'], ['staff_account.id'], ),
    sa.ForeignKeyConstraint(['staff_account_id'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('staff_leave_remain_quota',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('staff_account_id', sa.Integer(), nullable=True),
    sa.Column('leave_quota_id', sa.Integer(), nullable=True),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('last_year_quota', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['leave_quota_id'], ['staff_leave_quota.id'], ),
    sa.ForeignKeyConstraint(['staff_account_id'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('staff_leave_requests',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('quota_id', sa.Integer(), nullable=True),
    sa.Column('staff_account_id', sa.Integer(), nullable=True),
    sa.Column('start_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('end_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('start_travel_datetime', sa.DateTime(timezone=True), nullable=True),
    sa.Column('end_travel_datetime', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('reason', sa.String(), nullable=True),
    sa.Column('contact_address', sa.String(), nullable=True),
    sa.Column('contact_phone', sa.String(), nullable=True),
    sa.Column('cancelled_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('cancelled_account_id', sa.Integer(), nullable=True),
    sa.Column('country', sa.String(), nullable=True),
    sa.Column('total_leave_days', sa.Float(), nullable=True),
    sa.Column('upload_file_url', sa.String(), nullable=True),
    sa.Column('after_hour', sa.Boolean(), nullable=True),
    sa.Column('notify_to_line', sa.Boolean(), nullable=True),
    sa.Column('last_cancel_requested_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['cancelled_account_id'], ['staff_account.id'], ),
    sa.ForeignKeyConstraint(['quota_id'], ['staff_leave_quota.id'], ),
    sa.ForeignKeyConstraint(['staff_account_id'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('staff_leave_used_quota',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('leave_type_id', sa.Integer(), nullable=True),
    sa.Column('staff_account_id', sa.Integer(), nullable=True),
    sa.Column('fiscal_year', sa.Integer(), nullable=True),
    sa.Column('used_days', sa.Float(), nullable=True),
    sa.Column('pending_days', sa.Float(), nullable=True),
    sa.Column('quota_days', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['leave_type_id'], ['staff_leave_types.id'], ),
    sa.ForeignKeyConstraint(['staff_account_id'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('staff_request_work_logins',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('staff_account_id', sa.Integer(), nullable=True),
    sa.Column('reason', sa.String(), nullable=True),
    sa.Column('requested_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('approver_id', sa.Integer(), nullable=True),
    sa.Column('approved_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('cancelled_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('date_id', sa.String(), nullable=True),
    sa.Column('work_datetime', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_checkin', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['approver_id'], ['staff_account.id'], ),
    sa.ForeignKeyConstraint(['staff_account_id'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('staff_seminar_attends',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('seminar_id', sa.Integer(), nullable=True),
    sa.Column('start_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('end_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('role', sa.String(), nullable=True),
    sa.Column('registration_fee', sa.Float(), nullable=True),
    sa.Column('document_id', sa.String(), nullable=True),
    sa.Column('invited_organization', sa.String(), nullable=True),
    sa.Column('invited_document_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('document_title', sa.String(), nullable=True),
    sa.Column('taxi_cost', sa.Float(), nullable=True),
    sa.Column('train_ticket_cost', sa.Float(), nullable=True),
    sa.Column('flight_ticket_cost', sa.Float(), nullable=True),
    sa.Column('fuel_cost', sa.Float(), nullable=True),
    sa.Column('accommodation_cost', sa.Float(), nullable=True),
    sa.Column('budget_type', sa.String(), nullable=True),
    sa.Column('transaction_fee', sa.Float(), nullable=True),
    sa.Column('budget', sa.Float(), nullable=True),
    sa.Column('attend_online', sa.Boolean(), nullable=True),
    sa.Column('middle_level_approver_account_id', sa.Integer(), nullable=True),
    sa.Column('lower_level_approver_account_id', sa.Integer(), nullable=True),
    sa.Column('staff_account_id', sa.Integer(), nullable=True),
    sa.Column('document_no', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['lower_level_approver_account_id'], ['staff_account.id'], ),
    sa.ForeignKeyConstraint(['middle_level_approver_account_id'], ['staff_account.id'], ),
    sa.ForeignKeyConstraint(['seminar_id'], ['staff_seminar.id'], ),
    sa.ForeignKeyConstraint(['staff_account_id'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('staff_shift_schedule',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('staff_id', sa.Integer(), nullable=True),
    sa.Column('start_datetime', sa.DateTime(timezone=True), nullable=True),
    sa.Column('end_datetime', sa.DateTime(timezone=True), nullable=True),
    sa.Column('detail', sa.String(), nullable=True),
    sa.Column('abbr', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['staff_id'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('staff_work_from_home_approvers',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('staff_account_id', sa.Integer(), nullable=True),
    sa.Column('approver_account_id', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('notified_by_line', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['approver_account_id'], ['staff_account.id'], ),
    sa.ForeignKeyConstraint(['staff_account_id'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('staff_work_from_home_requests',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('staff_account_id', sa.Integer(), nullable=True),
    sa.Column('start_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('end_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('contact_phone', sa.String(), nullable=True),
    sa.Column('detail', sa.String(), nullable=True),
    sa.Column('deadline_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('cancelled_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('notify_to_line', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['staff_account_id'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('staff_work_logins',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('date_id', sa.String(), nullable=True),
    sa.Column('staff_id', sa.Integer(), nullable=True),
    sa.Column('start_datetime', sa.DateTime(timezone=True), nullable=True),
    sa.Column('end_datetime', sa.DateTime(timezone=True), nullable=True),
    sa.Column('checkin_mins', sa.Integer(), nullable=True),
    sa.Column('checkout_mins', sa.Integer(), nullable=True),
    sa.Column('num_scans', sa.Integer(), nullable=True),
    sa.Column('qrcode_in_exp_datetime', sa.DateTime(timezone=True), nullable=True),
    sa.Column('qrcode_out_exp_datetime', sa.DateTime(timezone=True), nullable=True),
    sa.Column('lat', sa.Numeric(), nullable=True),
    sa.Column('long', sa.Numeric(), nullable=True),
    sa.ForeignKeyConstraint(['staff_id'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('strategy_themes',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('refno', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('content', sa.String(), nullable=False),
    sa.Column('tactic_id', sa.Integer(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['tactic_id'], ['strategy_tactics.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tracker_accounts',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('subject', sa.String(length=255), nullable=False),
    sa.Column('number', sa.String(length=255), nullable=False),
    sa.Column('booking_date', sa.Date(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('formats', sa.String(length=255), nullable=False),
    sa.Column('creation_datetime', sa.DateTime(timezone=True), nullable=False),
    sa.Column('staff_id', sa.Integer(), nullable=False),
    sa.Column('desc', sa.Text(), nullable=True),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('url', sa.String(length=255), nullable=True),
    sa.Column('cancelled_datetime', sa.DateTime(timezone=True), nullable=True),
    sa.Column('cancelled_by_id', sa.Integer(), nullable=True),
    sa.Column('end_datetime', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['cancelled_by_id'], ['staff_account.id'], ),
    sa.ForeignKeyConstraint(['staff_id'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_roles',
    sa.Column('staff_account_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.ForeignKeyConstraint(['staff_account_id'], ['staff_account.id'], )
    )
    op.create_table('asset_items',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('en_desc', sa.String(length=255), nullable=False),
    sa.Column('th_desc', sa.String(length=255), nullable=False),
    sa.Column('location', sa.String(length=255), nullable=True),
    sa.Column('cost', sa.Numeric(), nullable=True),
    sa.Column('purchased_at', sa.Date(), nullable=True),
    sa.Column('retired_at', sa.Date(), nullable=True),
    sa.Column('group_id', sa.String(length=2), nullable=False),
    sa.Column('class_id', sa.String(length=2), nullable=False),
    sa.Column('type_id', sa.String(length=3), nullable=False),
    sa.Column('desc_id', sa.String(length=4), nullable=False),
    sa.Column('room_id', sa.Integer(), nullable=True),
    sa.Column('reservable', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['room_id'], ['scheduler_room_resources.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('comhealth_customer_info',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['comhealth_customers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('comhealth_group_customers',
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['customer_id'], ['comhealth_customer_groups.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['comhealth_customers.id'], ),
    sa.PrimaryKeyConstraint('customer_id', 'group_id')
    )
    op.create_table('comhealth_test_records',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('labno', sa.String(length=16), nullable=True),
    sa.Column('customer_id', sa.Integer(), nullable=True),
    sa.Column('service_id', sa.Integer(), nullable=True),
    sa.Column('checkin_datetime', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('urgent', sa.Boolean(), nullable=True),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('finance_contact_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['comhealth_customers.id'], ),
    sa.ForeignKeyConstraint(['finance_contact_id'], ['comhealth_finance_contact_reason.id'], ),
    sa.ForeignKeyConstraint(['service_id'], ['comhealth_services.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('complaint_action_records',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('record_id', sa.Integer(), nullable=True),
    sa.Column('reviewer_id', sa.Integer(), nullable=True),
    sa.Column('review_comment', sa.Text(), nullable=True),
    sa.Column('approver_id', sa.Integer(), nullable=True),
    sa.Column('approved', sa.DateTime(timezone=True), nullable=True),
    sa.Column('approver_comment', sa.Text(), nullable=True),
    sa.Column('deadline', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['approver_id'], ['complaint_admins.id'], ),
    sa.ForeignKeyConstraint(['record_id'], ['complaint_records.id'], ),
    sa.ForeignKeyConstraint(['reviewer_id'], ['complaint_admins.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('data_process_assoc',
    sa.Column('data_id', sa.Integer(), nullable=False),
    sa.Column('process_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['data_id'], ['db_data.id'], ),
    sa.ForeignKeyConstraint(['process_id'], ['db_processes.id'], ),
    sa.PrimaryKeyConstraint('data_id', 'process_id')
    )
    op.create_table('data_process_staff_assoc',
    sa.Column('staff_id', sa.Integer(), nullable=False),
    sa.Column('process_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['process_id'], ['db_processes.id'], ),
    sa.ForeignKeyConstraint(['staff_id'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('staff_id', 'process_id')
    )
    op.create_table('data_service_assoc',
    sa.Column('data_id', sa.Integer(), nullable=False),
    sa.Column('core_service_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['core_service_id'], ['db_core_services.id'], ),
    sa.ForeignKeyConstraint(['data_id'], ['db_data.id'], ),
    sa.PrimaryKeyConstraint('data_id', 'core_service_id')
    )
    op.create_table('db_datasets',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('reference', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('desc', sa.Text(), nullable=True),
    sa.Column('source_url', sa.Text(), nullable=True),
    sa.Column('data_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('maintainer_id', sa.Integer(), nullable=True),
    sa.Column('sensitive', sa.Boolean(), nullable=True),
    sa.Column('personal', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['staff_account.id'], ),
    sa.ForeignKeyConstraint(['data_id'], ['db_data.id'], ),
    sa.ForeignKeyConstraint(['maintainer_id'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('doc_documents',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('round_id', sa.Integer(), nullable=True),
    sa.Column('number', sa.Integer(), nullable=True),
    sa.Column('deadline', sa.DateTime(timezone=True), nullable=True),
    sa.Column('addedAt', sa.DateTime(timezone=True), nullable=True),
    sa.Column('file_name', sa.String(length=255), nullable=True),
    sa.Column('url', sa.String(length=255), nullable=True),
    sa.Column('priority', sa.String(length=255), nullable=True),
    sa.Column('stage', sa.String(length=255), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=True),
    sa.Column('summary', sa.Text(), nullable=True),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['doc_categories.id'], ),
    sa.ForeignKeyConstraint(['round_id'], ['doc_rounds.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('doc_round_orgs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('sent_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('round_id', sa.Integer(), nullable=True),
    sa.Column('org_id', sa.Integer(), nullable=True),
    sa.Column('finished_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['org_id'], ['orgs.id'], ),
    sa.ForeignKeyConstraint(['round_id'], ['doc_rounds.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('eduqa_course_assignment_sessions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.Column('start', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end', sa.DateTime(timezone=True), nullable=False),
    sa.Column('type_', sa.String(length=255), nullable=True),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('desc', sa.Text(), nullable=True),
    sa.Column('format', sa.String(), nullable=True),
    sa.Column('workhours', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['eduqa_courses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('eduqa_course_formative_assessments',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('desc', sa.Text(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['eduqa_courses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('eduqa_course_instructor_assoc',
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('instructor_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['eduqa_courses.id'], ),
    sa.ForeignKeyConstraint(['instructor_id'], ['eduqa_course_instructors.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['eduqa_course_instructor_roles.id'], ),
    sa.PrimaryKeyConstraint('course_id', 'instructor_id')
    )
    op.create_table('eduqa_course_learning_outcomes',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.Column('number', sa.Integer(), nullable=True),
    sa.Column('detail', sa.Text(), nullable=True),
    sa.Column('score_weight', sa.Numeric(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['eduqa_courses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('eduqa_course_plo_assoc',
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.Column('instructor_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['eduqa_courses.id'], ),
    sa.ForeignKeyConstraint(['instructor_id'], ['eduqa_plos.id'], )
    )
    op.create_table('eduqa_course_required_materials',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('detail', sa.Text(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['eduqa_courses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('eduqa_course_resources',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('detail', sa.Text(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['eduqa_courses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('eduqa_course_sessions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.Column('start', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end', sa.DateTime(timezone=True), nullable=False),
    sa.Column('type_', sa.String(length=255), nullable=True),
    sa.Column('desc', sa.Text(), nullable=True),
    sa.Column('format', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['eduqa_courses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('eduqa_course_suggested_materials',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('detail', sa.Text(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['eduqa_courses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('eduqa_grading_scheme_item_criteria',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.Column('scheme_item_id', sa.Integer(), nullable=True),
    sa.Column('criteria', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['eduqa_courses.id'], ),
    sa.ForeignKeyConstraint(['scheme_item_id'], ['eduqa_grading_scheme_items.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('eduqa_instructor_evaluations',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.Column('instructor_id', sa.Integer(), nullable=True),
    sa.Column('suggestion', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['eduqa_courses.id'], ),
    sa.ForeignKeyConstraint(['instructor_id'], ['eduqa_course_instructors.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('eduqa_student_enrollments',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=16), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['eduqa_courses.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['eduqa_students.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('electronic_receipt_items',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('item', sa.Text(), nullable=False),
    sa.Column('receipt_id', sa.Integer(), nullable=True),
    sa.Column('price', sa.Numeric(), nullable=False),
    sa.Column('cost_center_id', sa.String(length=12), nullable=True),
    sa.Column('iocode_id', sa.String(length=16), nullable=True),
    sa.Column('gl_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['cost_center_id'], ['cost_centers.id'], ),
    sa.ForeignKeyConstraint(['gl_id'], ['electronic_receipt_gls.gl'], ),
    sa.ForeignKeyConstraint(['iocode_id'], ['iocodes.id'], ),
    sa.ForeignKeyConstraint(['receipt_id'], ['electronic_receipt_details.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('electronic_receipt_requests',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('detail_id', sa.Integer(), nullable=True),
    sa.Column('reason', sa.Text(), nullable=False),
    sa.Column('url_drive', sa.String(), nullable=True),
    sa.Column('created_at', sa.Date(), server_default=sa.text('now()'), nullable=True),
    sa.Column('staff_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['detail_id'], ['electronic_receipt_details.id'], ),
    sa.ForeignKeyConstraint(['staff_id'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('food_person_and_farm',
    sa.Column('person_id', sa.Integer(), nullable=True),
    sa.Column('farm_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['farm_id'], ['food_farms.id'], ),
    sa.ForeignKeyConstraint(['person_id'], ['food_persons.id'], )
    )
    op.create_table('food_produce_and_farm',
    sa.Column('farm_id', sa.Integer(), nullable=True),
    sa.Column('produce_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['farm_id'], ['food_farms.id'], ),
    sa.ForeignKeyConstraint(['produce_id'], ['food_grown_produces.id'], )
    )
    op.create_table('food_sample_lots',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('collected_at', sa.DateTime(), nullable=True),
    sa.Column('registered_at', sa.DateTime(), nullable=True),
    sa.Column('farm_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['farm_id'], ['food_farms.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('health_service_bookings',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('slot_id', sa.Integer(), nullable=True),
    sa.Column('cancelled', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('confirmed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['slot_id'], ['health_service_timeslots.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['health_service_app_users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('instrument_bookings',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('detail_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('start', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('cancelled_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('cancelled_by', sa.Integer(), nullable=True),
    sa.Column('desc', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['cancelled_by'], ['staff_account.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['staff_account.id'], ),
    sa.ForeignKeyConstraint(['detail_id'], ['procurement_details.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('km_topics',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('topic', sa.String(), nullable=False),
    sa.Column('desc', sa.Text(), nullable=True),
    sa.Column('process_id', sa.Integer(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('obsolete', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['creator_id'], ['staff_account.id'], ),
    sa.ForeignKeyConstraint(['process_id'], ['km_processes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('meeting_events',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('start', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end', sa.DateTime(timezone=True), nullable=False),
    sa.Column('detail', sa.Text(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('cancelled_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('cancelled_by', sa.Integer(), nullable=True),
    sa.Column('notify_participants', sa.Boolean(), nullable=True),
    sa.Column('meeting_url', sa.Text(), nullable=True),
    sa.Column('doc_url', sa.Text(), nullable=True),
    sa.Column('poll_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['cancelled_by'], ['staff_account.id'], ),
    sa.ForeignKeyConstraint(['creator_id'], ['staff_account.id'], ),
    sa.ForeignKeyConstraint(['poll_id'], ['meeting_polls.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('meeting_poll_items',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('start', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end', sa.DateTime(timezone=True), nullable=False),
    sa.Column('poll_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['poll_id'], ['meeting_polls.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('meeting_poll_participant_assoc',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('staff_id', sa.Integer(), nullable=True),
    sa.Column('poll_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['poll_id'], ['meeting_polls.id'], ),
    sa.ForeignKeyConstraint(['staff_id'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ot_announce_document_assoc',
    sa.Column('announce_id', sa.Integer(), nullable=False),
    sa.Column('document_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['announce_id'], ['ot_payment_announce.id'], ),
    sa.ForeignKeyConstraint(['document_id'], ['ot_document_approval.id'], ),
    sa.PrimaryKeyConstraint('announce_id', 'document_id')
    )
    op.create_table('ot_staff_assoc',
    sa.Column('staff_id', sa.Integer(), nullable=False),
    sa.Column('document_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['ot_document_approval.id'], ),
    sa.ForeignKeyConstraint(['staff_id'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('staff_id', 'document_id')
    )
    op.create_table('pa_committee_assoc',
    sa.Column('pa_agreement_id', sa.Integer(), nullable=True),
    sa.Column('committee_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['committee_id'], ['pa_committees.id'], ),
    sa.ForeignKeyConstraint(['pa_agreement_id'], ['pa_agreements.id'], )
    )
    op.create_table('pa_functional_competency_evaluations',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('staff_account_id', sa.Integer(), nullable=True),
    sa.Column('evaluator_account_id', sa.Integer(), nullable=True),
    sa.Column('round_id', sa.Integer(), nullable=True),
    sa.Column('pa_id', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('confirm_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['evaluator_account_id'], ['staff_account.id'], ),
    sa.ForeignKeyConstraint(['pa_id'], ['pa_agreements.id'], ),
    sa.ForeignKeyConstraint(['round_id'], ['pa_functional_competency_round.id'], ),
    sa.ForeignKeyConstraint(['staff_account_id'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pa_kpis',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('pa_id', sa.Integer(), nullable=True),
    sa.Column('detail', sa.Text(), nullable=True),
    sa.Column('source', sa.Text(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['pa_id'], ['pa_agreements.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pa_requests',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('pa_id', sa.Integer(), nullable=True),
    sa.Column('supervisor_id', sa.Integer(), nullable=True),
    sa.Column('for_', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('supervisor_comment', sa.Text(), nullable=True),
    sa.Column('responded_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('submitted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('detail', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['pa_id'], ['pa_agreements.id'], ),
    sa.ForeignKeyConstraint(['supervisor_id'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pa_score_sheets',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('pa_id', sa.Integer(), nullable=True),
    sa.Column('staff_id', sa.Integer(), nullable=True),
    sa.Column('committee_id', sa.Integer(), nullable=True),
    sa.Column('is_consolidated', sa.Boolean(), nullable=True),
    sa.Column('is_final', sa.Boolean(), nullable=True),
    sa.Column('is_appproved', sa.Boolean(), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('confirm_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('strengths', sa.Text(), nullable=True),
    sa.Column('weaknesses', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['committee_id'], ['pa_committees.id'], ),
    sa.ForeignKeyConstraint(['pa_id'], ['pa_agreements.id'], ),
    sa.ForeignKeyConstraint(['staff_id'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pdpa_coordinators',
    sa.Column('staff_id', sa.Integer(), nullable=False),
    sa.Column('db_core_service_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['db_core_service_id'], ['db_core_services.id'], ),
    sa.ForeignKeyConstraint(['staff_id'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('staff_id', 'db_core_service_id')
    )
    op.create_table('pdpa_requests',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('service_id', sa.Integer(), nullable=True),
    sa.Column('request_type_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('requester_name', sa.String(), nullable=False),
    sa.Column('requester_email', sa.String(), nullable=True),
    sa.Column('requester_phone', sa.String(), nullable=True),
    sa.Column('received_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('received_by', sa.Integer(), nullable=True),
    sa.Column('detail', sa.Text(), nullable=True),
    sa.Column('approved_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('decision', sa.String(), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['received_by'], ['staff_account.id'], ),
    sa.ForeignKeyConstraint(['request_type_id'], ['pdpa_types.id'], ),
    sa.ForeignKeyConstraint(['service_id'], ['db_core_services.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('procurement_borrow_items',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('borrow_detail_id', sa.Integer(), nullable=True),
    sa.Column('procurement_detail_id', sa.Integer(), nullable=True),
    sa.Column('item', sa.String(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('unit', sa.String(), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['borrow_detail_id'], ['procurement_borrow_details.id'], ),
    sa.ForeignKeyConstraint(['procurement_detail_id'], ['procurement_details.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('procurement_info_computers',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('mac_address', sa.String(), nullable=True),
    sa.Column('computer_name', sa.String(), nullable=True),
    sa.Column('detail_id', sa.Integer(), nullable=True),
    sa.Column('cpu_id', sa.Integer(), nullable=True),
    sa.Column('ram_id', sa.Integer(), nullable=True),
    sa.Column('windows_version_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('harddisk', sa.String(), nullable=True),
    sa.Column('capacity', sa.String(), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['cpu_id'], ['procurement_info_cpus.id'], ),
    sa.ForeignKeyConstraint(['detail_id'], ['procurement_details.id'], ),
    sa.ForeignKeyConstraint(['ram_id'], ['procurement_info_rams.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['staff_account.id'], ),
    sa.ForeignKeyConstraint(['windows_version_id'], ['procurement_info_windows_versions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('procurement_records',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=True),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updater_id', sa.Integer(), nullable=True),
    sa.Column('status_id', sa.Integer(), nullable=True),
    sa.Column('staff_responsible_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['procurement_details.id'], ),
    sa.ForeignKeyConstraint(['location_id'], ['scheduler_room_resources.id'], ),
    sa.ForeignKeyConstraint(['staff_responsible_id'], ['staff_account.id'], ),
    sa.ForeignKeyConstraint(['status_id'], ['procurement_statuses.id'], ),
    sa.ForeignKeyConstraint(['updater_id'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('procurement_requires',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('staff_id', sa.Integer(), nullable=False),
    sa.Column('detail_id', sa.Integer(), nullable=True),
    sa.Column('desc', sa.Text(), nullable=True),
    sa.Column('notice_date', sa.Date(), nullable=True),
    sa.Column('format_service', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['detail_id'], ['procurement_details.id'], ),
    sa.ForeignKeyConstraint(['staff_id'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('room_coordinator_assoc',
    sa.Column('staff_id', sa.Integer(), nullable=True),
    sa.Column('room_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['room_id'], ['scheduler_room_resources.id'], ),
    sa.ForeignKeyConstraint(['staff_id'], ['staff_account.id'], )
    )
    op.create_table('service_staff_assoc',
    sa.Column('staff_id', sa.Integer(), nullable=False),
    sa.Column('core_service_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['core_service_id'], ['db_core_services.id'], ),
    sa.ForeignKeyConstraint(['staff_id'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('staff_id', 'core_service_id')
    )
    op.create_table('staff_group_associations',
    sa.Column('group_detail_id', sa.Integer(), nullable=False),
    sa.Column('staff_id', sa.Integer(), nullable=False),
    sa.Column('position_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['group_detail_id'], ['staff_group_details.id'], ),
    sa.ForeignKeyConstraint(['position_id'], ['staff_group_positions.id'], ),
    sa.ForeignKeyConstraint(['staff_id'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('group_detail_id', 'staff_id', 'position_id')
    )
    op.create_table('staff_leave_approvals',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('request_id', sa.Integer(), nullable=True),
    sa.Column('approver_id', sa.Integer(), nullable=True),
    sa.Column('is_approved', sa.Boolean(), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('approval_comment', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['approver_id'], ['staff_leave_approvers.id'], ),
    sa.ForeignKeyConstraint(['request_id'], ['staff_leave_requests.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('staff_seminar_approvals',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('seminar_attend_id', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_approved', sa.Boolean(), nullable=True),
    sa.Column('approval_comment', sa.String(), nullable=True),
    sa.Column('final_approver_account_id', sa.Integer(), nullable=True),
    sa.Column('recorded_account_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['final_approver_account_id'], ['staff_account.id'], ),
    sa.ForeignKeyConstraint(['recorded_account_id'], ['staff_account.id'], ),
    sa.ForeignKeyConstraint(['seminar_attend_id'], ['staff_seminar_attends.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('staff_seminar_mission_assoc',
    sa.Column('seminar_attend_id', sa.Integer(), nullable=True),
    sa.Column('seminar_mission_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['seminar_attend_id'], ['staff_seminar_attends.id'], ),
    sa.ForeignKeyConstraint(['seminar_mission_id'], ['staff_seminar_missions.id'], )
    )
    op.create_table('staff_seminar_objective_assoc',
    sa.Column('seminar_attend_id', sa.Integer(), nullable=True),
    sa.Column('seminar_objective_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['seminar_attend_id'], ['staff_seminar_attends.id'], ),
    sa.ForeignKeyConstraint(['seminar_objective_id'], ['staff_seminar_objectives.id'], )
    )
    op.create_table('staff_seminar_proposals',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('seminar_attend_id', sa.Integer(), nullable=True),
    sa.Column('approved_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_approved', sa.Boolean(), nullable=True),
    sa.Column('approval_comment', sa.String(), nullable=True),
    sa.Column('proposer_account_id', sa.Integer(), nullable=True),
    sa.Column('previous_proposal_id', sa.Integer(), nullable=True),
    sa.Column('upload_file_url', sa.String(), nullable=True),
    sa.Column('proposer_head_position_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['proposer_account_id'], ['staff_account.id'], ),
    sa.ForeignKeyConstraint(['proposer_head_position_id'], ['staff_head_positions.id'], ),
    sa.ForeignKeyConstraint(['seminar_attend_id'], ['staff_seminar_attends.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('staff_work_from_home_approvals',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('request_id', sa.Integer(), nullable=True),
    sa.Column('approver_id', sa.Integer(), nullable=True),
    sa.Column('is_approved', sa.Boolean(), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('approval_comment', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['approver_id'], ['staff_work_from_home_approvers.id'], ),
    sa.ForeignKeyConstraint(['request_id'], ['staff_work_from_home_requests.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('staff_work_from_home_checked_job',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('overall_result', sa.String(), nullable=True),
    sa.Column('request_id', sa.Integer(), nullable=True),
    sa.Column('finish_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['request_id'], ['staff_work_from_home_requests.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('staff_work_from_home_job_detail',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('topic', sa.String(), nullable=False),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.Column('wfh_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['wfh_id'], ['staff_work_from_home_requests.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('strategy_activities',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('refno', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('content', sa.String(), nullable=False),
    sa.Column('theme_id', sa.Integer(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['theme_id'], ['strategy_themes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('student_profile',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('gender', sa.String(), nullable=True),
    sa.Column('dob', sa.Date(), nullable=True),
    sa.Column('student_id', sa.String(), nullable=True),
    sa.Column('cur_addr', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['cur_addr'], ['addresses.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tracker_forms',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=True),
    sa.Column('staff_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('method', sa.String(), nullable=True),
    sa.Column('reason', sa.Text(), nullable=True),
    sa.Column('created_at', sa.Date(), server_default=sa.text('now()'), nullable=True),
    sa.Column('book', sa.String(), nullable=True),
    sa.Column('number', sa.String(), nullable=True),
    sa.Column('receipt_date', sa.Date(), nullable=True),
    sa.Column('disbursement_method', sa.String(), nullable=True),
    sa.Column('financial_year', sa.String(), nullable=True),
    sa.Column('cost_center', sa.String(), nullable=True),
    sa.Column('internal_order', sa.String(), nullable=True),
    sa.Column('parcel_inspector_name', sa.String(), nullable=True),
    sa.Column('approve_disbursement', sa.String(), nullable=True),
    sa.Column('total_money', sa.String(), nullable=True),
    sa.Column('advance_name', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['tracker_accounts.id'], ),
    sa.ForeignKeyConstraint(['staff_id'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tracker_statuses',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=True),
    sa.Column('creation_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('status_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('staff_id', sa.Integer(), nullable=False),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('update_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('activity_id', sa.Integer(), nullable=True),
    sa.Column('other_activity', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['tracker_accounts.id'], ),
    sa.ForeignKeyConstraint(['activity_id'], ['tracker_activities.id'], ),
    sa.ForeignKeyConstraint(['staff_id'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('comhealth_consent_records',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('consent_date', sa.Date(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('creator', sa.Integer(), nullable=True),
    sa.Column('record_id', sa.Integer(), nullable=True),
    sa.Column('is_consent_given', sa.Boolean(), nullable=True),
    sa.Column('detail_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['creator'], ['staff_account.id'], ),
    sa.ForeignKeyConstraint(['detail_id'], ['comhealth_consent_details.id'], ),
    sa.ForeignKeyConstraint(['record_id'], ['comhealth_test_records.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('comhealth_specimens_checkin_records',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('record_id', sa.Integer(), nullable=True),
    sa.Column('container_id', sa.Integer(), nullable=True),
    sa.Column('checkin_datetime', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['container_id'], ['comhealth_containers.id'], ),
    sa.ForeignKeyConstraint(['record_id'], ['comhealth_test_records.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('comhealth_test_item_records',
    sa.Column('test_item_id', sa.Integer(), nullable=False),
    sa.Column('record_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['record_id'], ['comhealth_test_records.id'], ),
    sa.ForeignKeyConstraint(['test_item_id'], ['comhealth_test_items.id'], ),
    sa.PrimaryKeyConstraint('test_item_id', 'record_id')
    )
    op.create_table('comhealth_test_profile_items',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('record_id', sa.Integer(), nullable=True),
    sa.Column('test_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['record_id'], ['comhealth_test_records.id'], ),
    sa.ForeignKeyConstraint(['test_id'], ['comhealth_test_profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('comhealth_test_receipts',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('code', sa.String(), nullable=True),
    sa.Column('copy_number', sa.Integer(), nullable=True),
    sa.Column('book_number', sa.String(length=16), nullable=True),
    sa.Column('checkin_datetime', sa.DateTime(timezone=True), nullable=True),
    sa.Column('record_id', sa.Integer(), nullable=True),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('paid', sa.Boolean(), nullable=True),
    sa.Column('cancelled', sa.Boolean(), nullable=True),
    sa.Column('cancel_comment', sa.Text(), nullable=True),
    sa.Column('issuer_id', sa.Integer(), nullable=True),
    sa.Column('issued_at', sa.String(), nullable=True),
    sa.Column('cashier_id', sa.Integer(), nullable=True),
    sa.Column('payment_method', sa.String(length=64), nullable=True),
    sa.Column('paid_amount', sa.Numeric(), nullable=True),
    sa.Column('card_number', sa.String(length=16), nullable=True),
    sa.Column('print_profile_note', sa.Boolean(), nullable=True),
    sa.Column('print_profile_how', sa.String(), nullable=True),
    sa.Column('issued_for', sa.String(), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('pdf_file', sa.LargeBinary(), nullable=True),
    sa.ForeignKeyConstraint(['cashier_id'], ['comhealth_cashier.id'], ),
    sa.ForeignKeyConstraint(['issuer_id'], ['comhealth_cashier.id'], ),
    sa.ForeignKeyConstraint(['record_id'], ['comhealth_test_records.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('dataset_process_assoc',
    sa.Column('dataset_id', sa.Integer(), nullable=False),
    sa.Column('process_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['dataset_id'], ['db_datasets.id'], ),
    sa.ForeignKeyConstraint(['process_id'], ['db_processes.id'], ),
    sa.PrimaryKeyConstraint('dataset_id', 'process_id')
    )
    op.create_table('dataset_service_assoc',
    sa.Column('dataset_id', sa.Integer(), nullable=False),
    sa.Column('core_service_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['core_service_id'], ['db_core_services.id'], ),
    sa.ForeignKeyConstraint(['dataset_id'], ['db_datasets.id'], ),
    sa.PrimaryKeyConstraint('dataset_id', 'core_service_id')
    )
    op.create_table('db_dataset_tag_assoc',
    sa.Column('dataset_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['dataset_id'], ['db_datasets.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['db_datatags.id'], ),
    sa.PrimaryKeyConstraint('dataset_id', 'tag_id')
    )
    op.create_table('db_files',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('data_set_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('desc', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('url', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['data_set_id'], ['db_datasets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('db_ropas',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('dataset_id', sa.Integer(), nullable=True),
    sa.Column('major_objective', sa.Text(), nullable=True),
    sa.Column('minor_objective', sa.Text(), nullable=True),
    sa.Column('personal_data', sa.String(), nullable=True),
    sa.Column('personal_data_desc', sa.Text(), nullable=True),
    sa.Column('sensitive_data', sa.Text(), nullable=True),
    sa.Column('consent_required', sa.Boolean(), nullable=True),
    sa.Column('amount', sa.String(), nullable=True),
    sa.Column('is_primary_data', sa.Boolean(), nullable=True),
    sa.Column('law_basis', sa.Text(), nullable=True),
    sa.Column('source', sa.Text(), nullable=True),
    sa.Column('format', sa.Text(), nullable=True),
    sa.Column('storage', sa.Text(), nullable=True),
    sa.Column('duration', sa.Text(), nullable=True),
    sa.Column('destroy_method', sa.Text(), nullable=True),
    sa.Column('inside_sharing', sa.Text(), nullable=True),
    sa.Column('outside_sharing', sa.Text(), nullable=True),
    sa.Column('intl_sharing', sa.Text(), nullable=True),
    sa.Column('security_measure', sa.Text(), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updater_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['dataset_id'], ['db_datasets.id'], ),
    sa.ForeignKeyConstraint(['updater_id'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('doc_document_reaches',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('reached_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('reacher_id', sa.Integer(), nullable=True),
    sa.Column('doc_id', sa.Integer(), nullable=True),
    sa.Column('starred', sa.Boolean(), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('round_org_id', sa.Integer(), nullable=True),
    sa.Column('sender_comment', sa.Text(), nullable=True),
    sa.Column('receiver_comment', sa.Text(), nullable=True),
    sa.Column('receiver_commented_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['doc_id'], ['doc_documents.id'], ),
    sa.ForeignKeyConstraint(['reacher_id'], ['staff_account.id'], ),
    sa.ForeignKeyConstraint(['round_org_id'], ['doc_round_orgs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('doc_receive_records',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('predefined_comment', sa.String(length=255), nullable=True),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('sent_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('sender_id', sa.Integer(), nullable=True),
    sa.Column('round_org_id', sa.Integer(), nullable=True),
    sa.Column('doc_id', sa.Integer(), nullable=True),
    sa.Column('rejected', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['doc_id'], ['doc_documents.id'], ),
    sa.ForeignKeyConstraint(['round_org_id'], ['doc_round_orgs.id'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('doc_round_org_reaches',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('reached_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('reacher_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('round_org_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['reacher_id'], ['staff_account.id'], ),
    sa.ForeignKeyConstraint(['round_org_id'], ['doc_round_orgs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('eduqa_clo_plo_assoc',
    sa.Column('clo_id', sa.Integer(), nullable=True),
    sa.Column('instructor_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['clo_id'], ['eduqa_course_learning_outcomes.id'], ),
    sa.ForeignKeyConstraint(['instructor_id'], ['eduqa_plos.id'], )
    )
    op.create_table('eduqa_course_learning_activities',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('detail', sa.String(), nullable=False),
    sa.Column('clo_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['clo_id'], ['eduqa_course_learning_outcomes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('eduqa_course_session_details',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=True),
    sa.Column('staff_id', sa.Integer(), nullable=True),
    sa.Column('factor', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['eduqa_course_sessions.id'], ),
    sa.ForeignKeyConstraint(['staff_id'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('eduqa_course_session_topics',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=True),
    sa.Column('topic', sa.String(), nullable=False),
    sa.Column('method', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['eduqa_course_sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('eduqa_instructor_evaluation_results',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('evaluation_id', sa.Integer(), nullable=True),
    sa.Column('choice_id', sa.Integer(), nullable=True),
    sa.Column('evaluation_item_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['choice_id'], ['eduqa_instructor_evaluation_choices.id'], ),
    sa.ForeignKeyConstraint(['evaluation_id'], ['eduqa_instructor_evaluations.id'], ),
    sa.ForeignKeyConstraint(['evaluation_item_id'], ['eduqa_instructor_evaluation_items.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('eduqa_session_assignment_instructor_assoc',
    sa.Column('session_assignment_id', sa.Integer(), nullable=True),
    sa.Column('instructor_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['instructor_id'], ['eduqa_course_instructors.id'], ),
    sa.ForeignKeyConstraint(['session_assignment_id'], ['eduqa_course_assignment_sessions.id'], )
    )
    op.create_table('eduqa_session_instructor_assoc',
    sa.Column('session_id', sa.Integer(), nullable=True),
    sa.Column('instructor_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['instructor_id'], ['eduqa_course_instructors.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['eduqa_course_sessions.id'], )
    )
    op.create_table('eduqa_student_grade_reports',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('enrollment_id', sa.Integer(), nullable=True),
    sa.Column('grade', sa.String(length=16), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updater_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('submitted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['staff_account.id'], ),
    sa.ForeignKeyConstraint(['enrollment_id'], ['eduqa_student_enrollments.id'], ),
    sa.ForeignKeyConstraint(['updater_id'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('food_samples',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lot_id', sa.Integer(), nullable=True),
    sa.Column('grown_produce_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['grown_produce_id'], ['food_grown_produces.id'], ),
    sa.ForeignKeyConstraint(['lot_id'], ['food_sample_lots.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('kpis',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_by', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('refno', sa.String(), nullable=True),
    sa.Column('intent', sa.String(), nullable=True),
    sa.Column('frequency', sa.Integer(), nullable=True),
    sa.Column('unit', sa.String(), nullable=True),
    sa.Column('source', sa.String(), nullable=True),
    sa.Column('available', sa.Boolean(), nullable=True),
    sa.Column('availability', sa.String(), nullable=True),
    sa.Column('formula', sa.String(), nullable=True),
    sa.Column('keeper', sa.String(), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('target', sa.String(), nullable=True),
    sa.Column('target_source', sa.String(), nullable=True),
    sa.Column('target_setter', sa.String(), nullable=True),
    sa.Column('target_reporter', sa.String(), nullable=True),
    sa.Column('target_account', sa.String(), nullable=True),
    sa.Column('reporter', sa.String(), nullable=True),
    sa.Column('consult', sa.String(), nullable=True),
    sa.Column('account', sa.String(), nullable=True),
    sa.Column('informed', sa.String(), nullable=True),
    sa.Column('pfm_account', sa.String(), nullable=True),
    sa.Column('pfm_resposible', sa.String(), nullable=True),
    sa.Column('pfm_consult', sa.String(), nullable=True),
    sa.Column('pfm_informed', sa.String(), nullable=True),
    sa.Column('strategy_activity_id', sa.Integer(), nullable=True),
    sa.Column('strategy_id', sa.Integer(), nullable=True),
    sa.Column('reportlink', sa.String(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['account'], ['staff_account.email'], ),
    sa.ForeignKeyConstraint(['consult'], ['staff_account.email'], ),
    sa.ForeignKeyConstraint(['informed'], ['staff_account.email'], ),
    sa.ForeignKeyConstraint(['keeper'], ['staff_account.email'], ),
    sa.ForeignKeyConstraint(['pfm_account'], ['staff_account.email'], ),
    sa.ForeignKeyConstraint(['pfm_consult'], ['staff_account.email'], ),
    sa.ForeignKeyConstraint(['pfm_informed'], ['staff_account.email'], ),
    sa.ForeignKeyConstraint(['pfm_resposible'], ['staff_account.email'], ),
    sa.ForeignKeyConstraint(['reporter'], ['staff_account.email'], ),
    sa.ForeignKeyConstraint(['strategy_activity_id'], ['strategy_activities.id'], ),
    sa.ForeignKeyConstraint(['strategy_id'], ['strategies.id'], ),
    sa.ForeignKeyConstraint(['target_account'], ['staff_account.email'], ),
    sa.ForeignKeyConstraint(['target_reporter'], ['staff_account.email'], ),
    sa.ForeignKeyConstraint(['target_setter'], ['staff_account.email'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('meeting_agendas',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('group', sa.String(), nullable=False),
    sa.Column('number', sa.String(), nullable=True),
    sa.Column('detail', sa.Text(), nullable=True),
    sa.Column('consensus', sa.Text(), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('consensus_updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('meeting_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['meeting_id'], ['meeting_events.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('meeting_invitations',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('meeting_event_id', sa.Integer(), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('staff_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('cancelled_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('responded_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('reponse', sa.String(), nullable=True),
    sa.Column('joined_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['meeting_event_id'], ['meeting_events.id'], ),
    sa.ForeignKeyConstraint(['staff_id'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('meeting_poll_item_participants',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('poll_participant_id', sa.Integer(), nullable=True),
    sa.Column('item_poll_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['item_poll_id'], ['meeting_poll_items.id'], ),
    sa.ForeignKeyConstraint(['poll_participant_id'], ['meeting_poll_participant_assoc.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ot_compensation_rate',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('announce_id', sa.Integer(), nullable=True),
    sa.Column('work_at_org_id', sa.Integer(), nullable=True),
    sa.Column('work_for_org_id', sa.Integer(), nullable=True),
    sa.Column('role', sa.String(), nullable=True),
    sa.Column('per_period', sa.Integer(), nullable=True),
    sa.Column('per_hour', sa.Integer(), nullable=True),
    sa.Column('per_day', sa.Integer(), nullable=True),
    sa.Column('is_faculty_emp', sa.Boolean(), nullable=True),
    sa.Column('is_workday', sa.Boolean(), nullable=False),
    sa.Column('max_hour', sa.Integer(), nullable=True),
    sa.Column('double_payment', sa.Boolean(), nullable=False),
    sa.Column('is_role_required', sa.Boolean(), nullable=True),
    sa.Column('is_count_in_mins', sa.Boolean(), nullable=True),
    sa.Column('topup', sa.Numeric(), nullable=True),
    sa.Column('detail', sa.String(), nullable=True),
    sa.Column('abbr', sa.String(), nullable=True),
    sa.Column('timeslot_id', sa.Integer(), nullable=True),
    sa.Column('ot_job_role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['announce_id'], ['ot_payment_announce.id'], ),
    sa.ForeignKeyConstraint(['ot_job_role_id'], ['ot_job_roles.id'], ),
    sa.ForeignKeyConstraint(['timeslot_id'], ['ot_timeslots.id'], ),
    sa.ForeignKeyConstraint(['work_at_org_id'], ['orgs.id'], ),
    sa.ForeignKeyConstraint(['work_for_org_id'], ['orgs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pa_approved_score_sheets',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('score_sheet_id', sa.Integer(), nullable=True),
    sa.Column('committee_id', sa.Integer(), nullable=True),
    sa.Column('approved_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['committee_id'], ['pa_committees.id'], ),
    sa.ForeignKeyConstraint(['score_sheet_id'], ['pa_score_sheets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pa_core_competency_items',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('scoresheet_id', sa.Integer(), nullable=True),
    sa.Column('topic', sa.String(), nullable=False),
    sa.Column('desc', sa.Text(), nullable=True),
    sa.Column('score', sa.Numeric(), nullable=True),
    sa.ForeignKeyConstraint(['scoresheet_id'], ['pa_score_sheets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pa_functional_competency_evaluation_indicators',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('evaluation_id', sa.Integer(), nullable=True),
    sa.Column('indicator_id', sa.Integer(), nullable=True),
    sa.Column('criterion_id', sa.Integer(), nullable=True),
    sa.Column('is_focus', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['criterion_id'], ['pa_functional_competency_criteria.id'], ),
    sa.ForeignKeyConstraint(['evaluation_id'], ['pa_functional_competency_evaluations.id'], ),
    sa.ForeignKeyConstraint(['indicator_id'], ['pa_functional_competency_indicators.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pa_items',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('task', sa.Text(), nullable=True),
    sa.Column('process_id', sa.Integer(), nullable=True),
    sa.Column('strategy_activity_id', sa.Integer(), nullable=True),
    sa.Column('report', sa.Text(), nullable=True),
    sa.Column('percentage', sa.Numeric(), nullable=True),
    sa.Column('pa_id', sa.Integer(), nullable=True),
    sa.Column('number', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['pa_item_categories.id'], ),
    sa.ForeignKeyConstraint(['pa_id'], ['pa_agreements.id'], ),
    sa.ForeignKeyConstraint(['process_id'], ['db_processes.id'], ),
    sa.ForeignKeyConstraint(['strategy_activity_id'], ['strategy_activities.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pa_kpi_items',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('level_id', sa.Integer(), nullable=True),
    sa.Column('kpi_id', sa.Integer(), nullable=True),
    sa.Column('goal', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['kpi_id'], ['pa_kpis.id'], ),
    sa.ForeignKeyConstraint(['level_id'], ['pa_levels.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pdpa_request_datasets',
    sa.Column('dataset_id', sa.Integer(), nullable=False),
    sa.Column('pdpa_request_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['dataset_id'], ['db_datasets.id'], ),
    sa.ForeignKeyConstraint(['pdpa_request_id'], ['pdpa_requests.id'], ),
    sa.PrimaryKeyConstraint('dataset_id', 'pdpa_request_id')
    )
    op.create_table('procurement_committee_approvals',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('record_id', sa.Integer(), nullable=True),
    sa.Column('approver_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('approval_comment', sa.Text(), nullable=True),
    sa.Column('asset_status', sa.String(), nullable=True),
    sa.Column('checking_result', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['approver_id'], ['staff_account.id'], ),
    sa.ForeignKeyConstraint(['record_id'], ['procurement_records.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('procurement_survey_computers',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('surveyor_id', sa.Integer(), nullable=True),
    sa.Column('satisfaction_with_speed_of_use', sa.String(), nullable=True),
    sa.Column('satisfaction_with_continuous_work', sa.String(), nullable=True),
    sa.Column('satisfaction_with_enough_space', sa.String(), nullable=True),
    sa.Column('personal_info', sa.Boolean(), nullable=True),
    sa.Column('check_back_up_file', sa.String(), nullable=True),
    sa.Column('reason_no_backup_file', sa.String(), nullable=True),
    sa.Column('check_anti_virus_update', sa.String(), nullable=True),
    sa.Column('check_windows_update', sa.String(), nullable=True),
    sa.Column('list_software', sa.String(), nullable=True),
    sa.Column('setting_user_login', sa.String(), nullable=True),
    sa.Column('setting_screen_saver', sa.String(), nullable=True),
    sa.Column('check_ms_office_and_windows_activation', sa.String(), nullable=True),
    sa.Column('requirement', sa.Text(), nullable=True),
    sa.Column('survey_date', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('computer_info_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['computer_info_id'], ['procurement_info_computers.id'], ),
    sa.ForeignKeyConstraint(['surveyor_id'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('scheduler_room_reservations',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('room_id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('start', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end', sa.DateTime(timezone=True), nullable=False),
    sa.Column('datetime', sqlalchemy_utils.types.range.DateTimeRangeType(), nullable=True),
    sa.Column('iocode_id', sa.String(length=16), nullable=True),
    sa.Column('occupancy', sa.Integer(), nullable=True),
    sa.Column('refreshment', sa.Integer(), nullable=True),
    sa.Column('request', sa.Text(), nullable=True),
    sa.Column('approved', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('cancelled_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('cancelled_by', sa.Integer(), nullable=True),
    sa.Column('approved_by', sa.Integer(), nullable=True),
    sa.Column('approved_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('extra_items', sa.JSON(), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('google_event_id', sa.String(length=64), nullable=True),
    sa.Column('google_calendar_id', sa.String(length=255), nullable=True),
    sa.Column('notify_participants', sa.Boolean(), nullable=True),
    sa.Column('course_session_id', sa.Integer(), nullable=True),
    sa.Column('meeting_event_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['approved_by'], ['staff_account.id'], ),
    sa.ForeignKeyConstraint(['cancelled_by'], ['staff_account.id'], ),
    sa.ForeignKeyConstraint(['category_id'], ['scheduler_event_categories.id'], ),
    sa.ForeignKeyConstraint(['course_session_id'], ['eduqa_course_sessions.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['staff_account.id'], ),
    sa.ForeignKeyConstraint(['iocode_id'], ['iocodes.id'], ),
    sa.ForeignKeyConstraint(['meeting_event_id'], ['meeting_events.id'], ),
    sa.ForeignKeyConstraint(['room_id'], ['scheduler_room_resources.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('seminar_approval_attend_assoc',
    sa.Column('attend_id', sa.Integer(), nullable=False),
    sa.Column('approval_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['approval_id'], ['staff_seminar_approvals.id'], ),
    sa.ForeignKeyConstraint(['attend_id'], ['staff_seminar_attends.id'], ),
    sa.PrimaryKeyConstraint('attend_id', 'approval_id')
    )
    op.create_table('staff_seminar_documents',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('seminar_proposal_id', sa.Integer(), nullable=True),
    sa.Column('document_no', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['seminar_proposal_id'], ['staff_seminar_proposals.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('comhealth_invoice',
    sa.Column('test_item_id', sa.Integer(), nullable=False),
    sa.Column('receipt_id', sa.Integer(), nullable=False),
    sa.Column('visible', sa.Boolean(), nullable=True),
    sa.Column('reimbursable', sa.Boolean(), nullable=True),
    sa.Column('billed', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['receipt_id'], ['comhealth_test_receipts.id'], ),
    sa.ForeignKeyConstraint(['test_item_id'], ['comhealth_test_items.id'], ),
    sa.PrimaryKeyConstraint('test_item_id', 'receipt_id')
    )
    op.create_table('dataset_kpi_assoc',
    sa.Column('dataset_id', sa.Integer(), nullable=False),
    sa.Column('kpi_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['dataset_id'], ['db_datasets.id'], ),
    sa.ForeignKeyConstraint(['kpi_id'], ['kpis.id'], ),
    sa.PrimaryKeyConstraint('dataset_id', 'kpi_id')
    )
    op.create_table('doc_receipt_receivers_assoc',
    sa.Column('receipt_id', sa.Integer(), nullable=True),
    sa.Column('personal_info_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['personal_info_id'], ['staff_personal_info.id'], ),
    sa.ForeignKeyConstraint(['receipt_id'], ['doc_receive_records.id'], )
    )
    op.create_table('eduqa_course_learning_activity_assessment_pairs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('learning_activity_id', sa.Integer(), nullable=True),
    sa.Column('learning_activity_assessment_id', sa.Integer(), nullable=True),
    sa.Column('clo_id', sa.Integer(), nullable=True),
    sa.Column('weight', sa.Numeric(), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['clo_id'], ['eduqa_course_learning_outcomes.id'], ),
    sa.ForeignKeyConstraint(['learning_activity_assessment_id'], ['eduqa_course_learning_activity_assessments.id'], ),
    sa.ForeignKeyConstraint(['learning_activity_id'], ['eduqa_course_learning_activities.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('eduqa_course_session_detail_roles',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('session_detail_id', sa.Integer(), nullable=True),
    sa.Column('detail', sa.Text(), nullable=True),
    sa.Column('role_item_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_item_id'], ['eduqa_course_session_detail_role_items.id'], ),
    sa.ForeignKeyConstraint(['session_detail_id'], ['eduqa_course_session_details.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('eduqa_learning_activity_assessment_assoc',
    sa.Column('learning_activity_id', sa.Integer(), nullable=True),
    sa.Column('learning_assessment_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['learning_activity_id'], ['eduqa_course_learning_activities.id'], ),
    sa.ForeignKeyConstraint(['learning_assessment_id'], ['eduqa_course_learning_activity_assessments.id'], )
    )
    op.create_table('event_participant_assoc',
    sa.Column('staff_id', sa.Integer(), nullable=True),
    sa.Column('event_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['scheduler_room_reservations.id'], ),
    sa.ForeignKeyConstraint(['staff_id'], ['staff_account.id'], )
    )
    op.create_table('food_bact_results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('test_id', sa.Integer(), nullable=True),
    sa.Column('sample_id', sa.Integer(), nullable=True),
    sa.Column('value', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['sample_id'], ['food_samples.id'], ),
    sa.ForeignKeyConstraint(['test_id'], ['food_bact_tests.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('food_parasite_results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('test_id', sa.Integer(), nullable=True),
    sa.Column('sample_id', sa.Integer(), nullable=True),
    sa.Column('count', sa.Integer(), nullable=True),
    sa.Column('comment', sa.String(length=80), nullable=True),
    sa.ForeignKeyConstraint(['sample_id'], ['food_samples.id'], ),
    sa.ForeignKeyConstraint(['test_id'], ['food_parasite_tests.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('food_pesticide_results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('test_id', sa.Integer(), nullable=True),
    sa.Column('sample_id', sa.Integer(), nullable=True),
    sa.Column('value', sa.Float(), nullable=True),
    sa.Column('cutoff_value', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['sample_id'], ['food_samples.id'], ),
    sa.ForeignKeyConstraint(['test_id'], ['food_pesticide_tests.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('food_toxico_results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('test_id', sa.Integer(), nullable=True),
    sa.Column('sample_id', sa.Integer(), nullable=True),
    sa.Column('value', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['sample_id'], ['food_samples.id'], ),
    sa.ForeignKeyConstraint(['test_id'], ['food_toxico_tests.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('item_kpi_item_assoc_assoc',
    sa.Column('item_id', sa.Integer(), nullable=True),
    sa.Column('kpi_item_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['pa_items.id'], ),
    sa.ForeignKeyConstraint(['kpi_item_id'], ['pa_kpi_items.id'], )
    )
    op.create_table('kpi_process_assoc',
    sa.Column('kpi_id', sa.Integer(), nullable=False),
    sa.Column('process_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['kpi_id'], ['kpis.id'], ),
    sa.ForeignKeyConstraint(['process_id'], ['db_processes.id'], ),
    sa.PrimaryKeyConstraint('kpi_id', 'process_id')
    )
    op.create_table('kpi_service_assoc',
    sa.Column('kpi_id', sa.Integer(), nullable=False),
    sa.Column('core_service_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['core_service_id'], ['db_core_services.id'], ),
    sa.ForeignKeyConstraint(['kpi_id'], ['kpis.id'], ),
    sa.PrimaryKeyConstraint('kpi_id', 'core_service_id')
    )
    op.create_table('kpi_staff_association',
    sa.Column('kpi_id', sa.Integer(), nullable=False),
    sa.Column('staff_account_id', sa.Integer(), nullable=False),
    sa.Column('ratio', sa.String(), nullable=True),
    sa.Column('comment', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['kpi_id'], ['kpis.id'], ),
    sa.ForeignKeyConstraint(['staff_account_id'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('kpi_id', 'staff_account_id')
    )
    op.create_table('ot_record',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('staff_account_id', sa.Integer(), nullable=True),
    sa.Column('compensation_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_account_id', sa.Integer(), nullable=True),
    sa.Column('orgs_id', sa.Integer(), nullable=True),
    sa.Column('sub_role', sa.String(), nullable=True),
    sa.Column('document_id', sa.Integer(), nullable=True),
    sa.Column('round_id', sa.Integer(), nullable=True),
    sa.Column('canceled_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('canceled_by_account_id', sa.Integer(), nullable=True),
    sa.Column('total_hours', sa.Integer(), nullable=True),
    sa.Column('total_minutes', sa.Integer(), nullable=True),
    sa.Column('amount_paid', sa.Float(), nullable=True),
    sa.Column('extra', sa.Numeric(), nullable=True),
    sa.Column('shift_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['canceled_by_account_id'], ['staff_account.id'], ),
    sa.ForeignKeyConstraint(['compensation_id'], ['ot_compensation_rate.id'], ),
    sa.ForeignKeyConstraint(['created_account_id'], ['staff_account.id'], ),
    sa.ForeignKeyConstraint(['document_id'], ['ot_document_approval.id'], ),
    sa.ForeignKeyConstraint(['orgs_id'], ['orgs.id'], ),
    sa.ForeignKeyConstraint(['round_id'], ['ot_round_request.id'], ),
    sa.ForeignKeyConstraint(['shift_id'], ['ot_shifts.id'], ),
    sa.ForeignKeyConstraint(['staff_account_id'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pa_core_competency_score_items',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('score_sheet_id', sa.Integer(), nullable=True),
    sa.Column('item_id', sa.Integer(), nullable=True),
    sa.Column('score', sa.Numeric(), nullable=True),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['pa_core_competency_items.id'], ),
    sa.ForeignKeyConstraint(['score_sheet_id'], ['pa_score_sheets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pa_score_sheet_items',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('score_sheet_id', sa.Integer(), nullable=True),
    sa.Column('item_id', sa.Integer(), nullable=True),
    sa.Column('kpi_item_id', sa.Integer(), nullable=True),
    sa.Column('score', sa.Numeric(), nullable=True),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['pa_items.id'], ),
    sa.ForeignKeyConstraint(['kpi_item_id'], ['pa_kpi_items.id'], ),
    sa.ForeignKeyConstraint(['score_sheet_id'], ['pa_score_sheets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ropa_service_assoc',
    sa.Column('ropa_id', sa.Integer(), nullable=False),
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ropa_id'], ['db_ropas.id'], ),
    sa.ForeignKeyConstraint(['subject_id'], ['db_data_subjects.id'], ),
    sa.PrimaryKeyConstraint('ropa_id', 'subject_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('ropa_service_assoc')
    op.drop_table('pa_score_sheet_items')
    op.drop_table('pa_core_competency_score_items')
    op.drop_table('ot_record')
    op.drop_table('kpi_staff_association')
    op.drop_table('kpi_service_assoc')
    op.drop_table('kpi_process_assoc')
    op.drop_table('item_kpi_item_assoc_assoc')
    op.drop_table('food_toxico_results')
    op.drop_table('food_pesticide_results')
    op.drop_table('food_parasite_results')
    op.drop_table('food_bact_results')
    op.drop_table('event_participant_assoc')
    op.drop_table('eduqa_learning_activity_assessment_assoc')
    op.drop_table('eduqa_course_session_detail_roles')
    op.drop_table('eduqa_course_learning_activity_assessment_pairs')
    op.drop_table('doc_receipt_receivers_assoc')
    op.drop_table('dataset_kpi_assoc')
    op.drop_table('comhealth_invoice')
    op.drop_table('staff_seminar_documents')
    op.drop_table('seminar_approval_attend_assoc')
    op.drop_table('scheduler_room_reservations')
    op.drop_table('procurement_survey_computers')
    op.drop_table('procurement_committee_approvals')
    op.drop_table('pdpa_request_datasets')
    op.drop_table('pa_kpi_items')
    op.drop_table('pa_items')
    op.drop_table('pa_functional_competency_evaluation_indicators')
    op.drop_table('pa_core_competency_items')
    op.drop_table('pa_approved_score_sheets')
    op.drop_table('ot_compensation_rate')
    op.drop_table('meeting_poll_item_participants')
    op.drop_table('meeting_invitations')
    op.drop_table('meeting_agendas')
    op.drop_table('kpis')
    op.drop_table('food_samples')
    op.drop_table('eduqa_student_grade_reports')
    op.drop_table('eduqa_session_instructor_assoc')
    op.drop_table('eduqa_session_assignment_instructor_assoc')
    op.drop_table('eduqa_instructor_evaluation_results')
    op.drop_table('eduqa_course_session_topics')
    op.drop_table('eduqa_course_session_details')
    op.drop_table('eduqa_course_learning_activities')
    op.drop_table('eduqa_clo_plo_assoc')
    op.drop_table('doc_round_org_reaches')
    op.drop_table('doc_receive_records')
    op.drop_table('doc_document_reaches')
    op.drop_table('db_ropas')
    op.drop_table('db_files')
    op.drop_table('db_dataset_tag_assoc')
    op.drop_table('dataset_service_assoc')
    op.drop_table('dataset_process_assoc')
    op.drop_table('comhealth_test_receipts')
    op.drop_table('comhealth_test_profile_items')
    op.drop_table('comhealth_test_item_records')
    op.drop_table('comhealth_specimens_checkin_records')
    op.drop_table('comhealth_consent_records')
    op.drop_table('tracker_statuses')
    op.drop_table('tracker_forms')
    op.drop_table('student_profile')
    op.drop_table('strategy_activities')
    op.drop_table('staff_work_from_home_job_detail')
    op.drop_table('staff_work_from_home_checked_job')
    op.drop_table('staff_work_from_home_approvals')
    op.drop_table('staff_seminar_proposals')
    op.drop_table('staff_seminar_objective_assoc')
    op.drop_table('staff_seminar_mission_assoc')
    op.drop_table('staff_seminar_approvals')
    op.drop_table('staff_leave_approvals')
    op.drop_table('staff_group_associations')
    op.drop_table('service_staff_assoc')
    op.drop_table('room_coordinator_assoc')
    op.drop_table('procurement_requires')
    op.drop_table('procurement_records')
    op.drop_table('procurement_info_computers')
    op.drop_table('procurement_borrow_items')
    op.drop_table('pdpa_requests')
    op.drop_table('pdpa_coordinators')
    op.drop_table('pa_score_sheets')
    op.drop_table('pa_requests')
    op.drop_table('pa_kpis')
    op.drop_table('pa_functional_competency_evaluations')
    op.drop_table('pa_committee_assoc')
    op.drop_table('ot_staff_assoc')
    op.drop_table('ot_announce_document_assoc')
    op.drop_table('meeting_poll_participant_assoc')
    op.drop_table('meeting_poll_items')
    op.drop_table('meeting_events')
    op.drop_table('km_topics')
    op.drop_table('instrument_bookings')
    op.drop_table('health_service_bookings')
    op.drop_table('food_sample_lots')
    op.drop_table('food_produce_and_farm')
    op.drop_table('food_person_and_farm')
    op.drop_table('electronic_receipt_requests')
    op.drop_table('electronic_receipt_items')
    op.drop_table('eduqa_student_enrollments')
    op.drop_table('eduqa_instructor_evaluations')
    op.drop_table('eduqa_grading_scheme_item_criteria')
    op.drop_table('eduqa_course_suggested_materials')
    op.drop_table('eduqa_course_sessions')
    op.drop_table('eduqa_course_resources')
    op.drop_table('eduqa_course_required_materials')
    op.drop_table('eduqa_course_plo_assoc')
    op.drop_table('eduqa_course_learning_outcomes')
    op.drop_table('eduqa_course_instructor_assoc')
    op.drop_table('eduqa_course_formative_assessments')
    op.drop_table('eduqa_course_assignment_sessions')
    op.drop_table('doc_round_orgs')
    op.drop_table('doc_documents')
    op.drop_table('db_datasets')
    op.drop_table('data_service_assoc')
    op.drop_table('data_process_staff_assoc')
    op.drop_table('data_process_assoc')
    op.drop_table('complaint_action_records')
    op.drop_table('comhealth_test_records')
    op.drop_table('comhealth_group_customers')
    op.drop_table('comhealth_customer_info')
    op.drop_table('asset_items')
    op.drop_table('user_roles')
    op.drop_table('tracker_accounts')
    op.drop_table('strategy_themes')
    op.drop_table('staff_work_logins')
    op.drop_table('staff_work_from_home_requests')
    op.drop_table('staff_work_from_home_approvers')
    op.drop_table('staff_shift_schedule')
    op.drop_table('staff_seminar_attends')
    op.drop_table('staff_request_work_logins')
    op.drop_table('staff_leave_used_quota')
    op.drop_table('staff_leave_requests')
    op.drop_table('staff_leave_remain_quota')
    op.drop_table('staff_leave_approvers')
    op.drop_table('staff_head_positions')
    op.drop_table('staff_group_details')
    op.drop_table('staff_group_assoc')
    op.drop_table('smartclass_scheduler_online_account_events')
    op.drop_table('scheduler_vehicle_bookings')
    op.drop_table('scheduler_room_resources')
    op.drop_table('research_scopus_ids')
    op.drop_table('pub_author_assoc')
    op.drop_table('procurement_details')
    op.drop_table('procurement_borrow_details')
    op.drop_table('pa_committees')
    op.drop_table('pa_agreements')
    op.drop_table('ot_round_request')
    op.drop_table('ot_payment_announce')
    op.drop_table('ot_document_approval')
    op.drop_table('meeting_polls')
    op.drop_table('meeting_agenda_notes')
    op.drop_table('lis_results')
    op.drop_table('km_processes')
    op.drop_table('health_service_timeslots')
    op.drop_table('food_farms')
    op.drop_table('electronic_receipt_details')
    op.drop_table('eduqa_plos')
    op.drop_table('eduqa_courses')
    op.drop_table('eduqa_course_instructors')
    op.drop_table('eduqa_academic_staff')
    op.drop_table('e_sign_certificate_files')
    op.drop_table('doc_rounds')
    op.drop_table('db_processes')
    op.drop_table('db_data')
    op.drop_table('db_core_services')
    op.drop_table('complaint_records')
    op.drop_table('complaint_admins')
    with op.batch_alter_table('comhealth_customers', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_comhealth_customers_lastname'))
        batch_op.drop_index(batch_op.f('ix_comhealth_customers_firstname'))

    op.drop_table('comhealth_customers')
    op.drop_table('comhealth_consent_details')
    op.drop_table('comhealth_cashier')
    op.drop_table('chemdb_items')
    op.drop_table('addresses')
    op.drop_table('subdistricts')
    op.drop_table('strategy_tactics')
    op.drop_table('staff_edu_degree')
    with op.batch_alter_table('staff_account', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_staff_account_line_id'))

    op.drop_table('staff_account')
    op.drop_table('staff_academic_position_records')
    op.drop_table('research_authors')
    op.drop_table('pa_functional_competency_indicators')
    op.drop_table('lis_orders')
    op.drop_table('food_grown_produces')
    op.drop_table('eduqa_curriculum_revisions')
    op.drop_table('cost_center_iocode_assoc')
    op.drop_table('comhealth_test_items')
    with op.batch_alter_table('comhealth_divisions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_comhealth_divisions_name'))

    op.drop_table('comhealth_divisions')
    op.drop_table('strategies')
    op.drop_table('staff_shift_role')
    op.drop_table('staff_personal_info')
    op.drop_table('staff_leave_quota')
    op.drop_table('smartclass_scheduler_online_accounts')
    op.drop_table('scheduler_vehicle_resources')
    op.drop_table('research_affils')
    op.drop_table('pub_subjarea_assoc')
    op.drop_table('pa_round_employment_assoc')
    op.drop_table('pa_functional_competency')
    op.drop_table('lis_tests')
    op.drop_table('iocodes')
    op.drop_table('food_produce_breeds')
    op.drop_table('food_health_services')
    op.drop_table('farm_to_markets')
    op.drop_table('eduqa_instructor_evaluation_items')
    op.drop_table('eduqa_grading_scheme_items')
    op.drop_table('eduqa_curriculums')
    op.drop_table('doc_send_out')
    op.drop_table('districts')
    op.drop_table('dashboard')
    op.drop_table('complaint_topics')
    with op.batch_alter_table('comhealth_tests', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_comhealth_tests_name'))
        batch_op.drop_index(batch_op.f('ix_comhealth_tests_code'))

    op.drop_table('comhealth_tests')
    op.drop_table('comhealth_reference_test_profile')
    op.drop_table('comhealth_profile_service_assoc')
    op.drop_table('comhealth_group_service_assoc')
    with op.batch_alter_table('comhealth_department', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_comhealth_department_name'))

    op.drop_table('comhealth_department')
    op.drop_table('well_types')
    op.drop_table('well_sizes')
    op.drop_table('tracker_activities')
    op.drop_table('students')
    op.drop_table('staff_special_groups')
    op.drop_table('staff_seminar_objectives')
    op.drop_table('staff_seminar_missions')
    op.drop_table('staff_seminar')
    op.drop_table('staff_leave_types')
    op.drop_table('staff_job_positions')
    op.drop_table('staff_group_positions')
    op.drop_table('staff_employments')
    op.drop_table('staff_academic_position')
    op.drop_table('smartclass_scheduler_resource_types')
    op.drop_table('scheduler_vehicle_types')
    op.drop_table('scheduler_vehicle_avails')
    op.drop_table('scheduler_room_types')
    op.drop_table('scheduler_room_avails')
    op.drop_table('scheduler_event_categories')
    op.drop_table('scb_payment_service_client_accounts')
    op.drop_table('scb_payment_records')
    op.drop_table('roles')
    op.drop_table('research_subject_areas')
    with op.batch_alter_table('research_pub', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_research_pub_scopus_id'))

    op.drop_table('research_pub')
    op.drop_table('research_countries')
    op.drop_table('provinces')
    op.drop_table('procurement_statuses')
    op.drop_table('procurement_purchasing_types')
    op.drop_table('procurement_info_windows_versions')
    op.drop_table('procurement_info_rams')
    op.drop_table('procurement_info_cpus')
    op.drop_table('procurement_categories')
    op.drop_table('pesticide_uses')
    op.drop_table('pdpa_types')
    op.drop_table('pa_rounds')
    op.drop_table('pa_levels')
    op.drop_table('pa_item_categories')
    op.drop_table('pa_functional_competency_round')
    op.drop_table('pa_functional_competency_levels')
    op.drop_table('pa_functional_competency_criteria')
    op.drop_table('orgs')
    op.drop_table('org_structure')
    op.drop_table('missions')
    op.drop_table('market_types')
    op.drop_table('market_details')
    op.drop_table('lis_test_groups')
    op.drop_table('holidays')
    op.drop_table('health_service_sites')
    op.drop_table('health_service_services')
    op.drop_table('health_service_app_users')
    op.drop_table('food_toxico_tests')
    op.drop_table('food_survey_results')
    op.drop_table('food_produces')
    op.drop_table('food_pesticide_tests')
    op.drop_table('food_persons')
    op.drop_table('food_parasite_tests')
    op.drop_table('food_health_phyexam')
    op.drop_table('food_health_person')
    op.drop_table('food_health_lab_tests')
    op.drop_table('food_health_lab_results')
    op.drop_table('food_bact_tests')
    op.drop_table('food_agritype')
    op.drop_table('electronic_receipt_received_money_from')
    op.drop_table('electronic_receipt_gls')
    op.drop_table('electronic_receipt_bank_names')
    op.drop_table('eduqa_students')
    op.drop_table('eduqa_programs')
    op.drop_table('eduqa_instructor_evaluation_choices')
    op.drop_table('eduqa_instructor_evaluation_categories')
    op.drop_table('eduqa_grading_schemes')
    op.drop_table('eduqa_course_session_detail_role_items')
    op.drop_table('eduqa_course_learning_activity_assessments')
    op.drop_table('eduqa_course_instructor_roles')
    op.drop_table('eduqa_course_categories')
    op.drop_table('doc_orgs')
    op.drop_table('doc_categories')
    op.drop_table('db_storages')
    op.drop_table('db_datatags')
    op.drop_table('db_data_subjects')
    op.drop_table('cost_centers')
    op.drop_table('complaint_statuses')
    op.drop_table('complaint_priorities')
    op.drop_table('complaint_categories')
    with op.batch_alter_table('comhealth_test_profiles', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_comhealth_test_profiles_name'))

    op.drop_table('comhealth_test_profiles')
    with op.batch_alter_table('comhealth_test_groups', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_comhealth_test_groups_name'))

    op.drop_table('comhealth_test_groups')
    op.drop_table('comhealth_services')
    op.drop_table('comhealth_receipt_ids')
    with op.batch_alter_table('comhealth_orgs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_comhealth_orgs_name'))

    op.drop_table('comhealth_orgs')
    op.drop_table('comhealth_finance_contact_reason')
    op.drop_table('comhealth_customer_info_items')
    op.drop_table('comhealth_customer_groups')
    op.drop_table('comhealth_customer_employment_types')
    with op.batch_alter_table('comhealth_containers', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_comhealth_containers_name'))
        batch_op.drop_index(batch_op.f('ix_comhealth_containers_code'))

    op.drop_table('comhealth_containers')
    op.drop_table('buffers')
    op.drop_table('buffer_details')
    op.drop_table('api_keys')
    op.drop_table('alumni_information')
    # ### end Alembic commands ###
