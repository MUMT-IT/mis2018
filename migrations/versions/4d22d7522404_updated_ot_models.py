"""updated OT models

Revision ID: 4d22d7522404
Revises: 1b936e3ffa98
Create Date: 2024-02-05 13:24:29.348907

"""
import sqlalchemy_utils
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '4d22d7522404'
down_revision = '1b936e3ffa98'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ot_job_roles',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('job_role', sa.String(), nullable=False),
    sa.Column('announce_id', sa.Integer(), nullable=True),
    sa.Column('retired_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('work_for_org_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['announce_id'], ['ot_payment_announce.id'], ),
    sa.ForeignKeyConstraint(['work_for_org_id'], ['orgs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ot_timeslots',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('start', sa.Time(), nullable=False),
    sa.Column('end', sa.Time(), nullable=False),
    sa.Column('announce_id', sa.Integer(), nullable=True),
    sa.Column('retired_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('work_for_org_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['announce_id'], ['ot_payment_announce.id'], ),
    sa.ForeignKeyConstraint(['work_for_org_id'], ['orgs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ot_shifts',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('datetime', sqlalchemy_utils.types.range.DateTimeRangeType(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('timeslot_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['staff_account.id'], ),
    sa.ForeignKeyConstraint(['timeslot_id'], ['ot_timeslots.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('ot_compensation_rate_time_slot_assoc')
    op.drop_table('ot_compensation_rate_time_slots')
    with op.batch_alter_table('ot_compensation_rate', schema=None) as batch_op:
        batch_op.add_column(sa.Column('timeslot_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('ot_job_role_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(None, 'ot_job_roles', ['ot_job_role_id'], ['id'])
        batch_op.create_foreign_key(None, 'ot_timeslots', ['timeslot_id'], ['id'])
        batch_op.drop_column('end_time')
        batch_op.drop_column('start_time')

    with op.batch_alter_table('ot_record', schema=None) as batch_op:
        batch_op.add_column(sa.Column('extra', sa.Numeric(), nullable=True))
        batch_op.add_column(sa.Column('shift_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(None, 'ot_shifts', ['shift_id'], ['id'])
        batch_op.drop_column('checkin_datetime')
        batch_op.drop_column('shift_datetime')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('ot_record', schema=None) as batch_op:
        batch_op.add_column(sa.Column('shift_datetime', postgresql.TSRANGE(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('checkin_datetime', postgresql.TSRANGE(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('shift_id')
        batch_op.drop_column('extra')

    with op.batch_alter_table('ot_compensation_rate', schema=None) as batch_op:
        batch_op.add_column(sa.Column('start_time', postgresql.TIME(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('end_time', postgresql.TIME(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('ot_job_role_id')
        batch_op.drop_column('timeslot_id')

    op.create_table('ot_compensation_rate_time_slots',
                    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
                    sa.Column('start_time', postgresql.TIME(), autoincrement=False, nullable=True),
                    sa.Column('end_time', postgresql.TIME(), autoincrement=False, nullable=True),
                    sa.Column('rate', sa.NUMERIC(), autoincrement=False, nullable=True),
                    sa.PrimaryKeyConstraint('id', name='ot_compensation_rate_time_slots_pkey')
                    )
    op.create_table('ot_compensation_rate_time_slot_assoc',
    sa.Column('compensation_rate_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('compensation_rate_time_slot_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['compensation_rate_id'], ['ot_compensation_rate.id'], name='ot_compensation_rate_time_slot_assoc_compensation_rate_id_fkey'),
    sa.ForeignKeyConstraint(['compensation_rate_time_slot_id'], ['ot_compensation_rate_time_slots.id'], name='ot_compensation_rate_time_slo_compensation_rate_time_slot__fkey'),
    sa.PrimaryKeyConstraint('compensation_rate_id', 'compensation_rate_time_slot_id', name='ot_compensation_rate_time_slot_assoc_pkey')
    )
    op.drop_table('ot_shifts')
    op.drop_table('ot_timeslots')
    op.drop_table('ot_job_roles')
    # ### end Alembic commands ###
